{"version":3,"file":"angular-auth-oidc-client.umd.js","sources":["../../src/modules/auth.module.ts","../../src/angular-auth-oidc-client.ts","../../src/services/oidc.security.service.ts","../../src/services/uri-encoder.ts","../../src/services/authorization-result.enum.ts","../../src/services/oidc.security.user-service.ts","../../src/services/oidc.security.silent-renew.ts","../../src/services/oidc.security.check-session.ts","../../src/services/auth.well-known-endpoints.ts","../../src/services/oidc.security.validation.ts","../../src/services/oidc.security.common.ts","../../src/services/oidc.security.storage.ts","../../src/modules/auth.configuration.ts"],"sourcesContent":["import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { OidcSecurityService } from '../services/oidc.security.service';\nimport { AuthConfiguration, DefaultConfiguration } from './auth.configuration';\nimport { OidcSecurityValidation } from '../services/oidc.security.validation';\nimport { OidcSecurityCheckSession } from '../services/oidc.security.check-session';\nimport { OidcSecuritySilentRenew } from '../services/oidc.security.silent-renew';\nimport { OidcSecurityUserService } from '../services/oidc.security.user-service';\nimport { OidcSecurityCommon } from '../services/oidc.security.common';\nimport { OidcSecurityStorage, BrowserStorage } from '../services/oidc.security.storage';\nimport { AuthWellKnownEndpoints } from '../services/auth.well-known-endpoints';\nexport class AuthModule {\n/**\n * @param {?=} token\n * @return {?}\n */\nstatic forRoot(token: Token = {}): ModuleWithProviders {\n        return {\n            ngModule: AuthModule,\n            providers: [\n                OidcSecurityService,\n                OidcSecurityValidation,\n                OidcSecurityCheckSession,\n                OidcSecuritySilentRenew,\n                OidcSecurityUserService,\n                OidcSecurityCommon,\n                AuthConfiguration,\n                DefaultConfiguration,\n                AuthWellKnownEndpoints,\n                {\n                    provide: OidcSecurityStorage,\n                    useClass: token.storage || BrowserStorage\n                }\n            ]\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AuthModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthModule.ctorParameters;\n}\n\n\nexport interface Type<T> extends Function {\n\n    new (...args: any[]): T;\n\n}\n\nexport interface Token {\n\n    storage?: Type<any>;\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// Public classes.\nexport { OidcSecurityService } from './services/oidc.security.service';\nexport { OidcSecurityValidation } from './services/oidc.security.validation';\nexport { OidcSecurityCheckSession } from './services/oidc.security.check-session';\nexport { OidcSecuritySilentRenew } from './services/oidc.security.silent-renew';\nexport { OidcSecurityUserService } from './services/oidc.security.user-service';\nexport { OidcSecurityCommon } from './services/oidc.security.common';\nexport { OidcSecurityStorage, BrowserStorage } from './services/oidc.security.storage';\nexport { AuthWellKnownEndpoints } from './services/auth.well-known-endpoints';\nexport { AuthorizationResult } from './services/authorization-result.enum';\n\nexport { AuthConfiguration, OpenIDImplicitFlowConfiguration, DefaultConfiguration } from './modules/auth.configuration';\nexport { AuthModule } from './modules/auth.module';\n","import { PLATFORM_ID, Inject } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { Injectable, EventEmitter, Output } from '@angular/core';\r\nimport'rxjs/add/operator/map';\r\nimport'rxjs/add/operator/catch';\r\nimport'rxjs/add/operator/timeInterval';\r\nimport'rxjs/add/operator/pluck';\r\nimport'rxjs/add/operator/take';\r\nimport'rxjs/add/observable/interval';\r\nimport'rxjs/add/observable/timer';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Router } from '@angular/router';\r\nimport { AuthConfiguration, OpenIDImplicitFlowConfiguration } from '../modules/auth.configuration';\r\nimport { OidcSecurityValidation } from './oidc.security.validation';\r\nimport { OidcSecurityCheckSession } from './oidc.security.check-session';\r\nimport { OidcSecuritySilentRenew } from './oidc.security.silent-renew';\r\nimport { OidcSecurityUserService } from './oidc.security.user-service';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { AuthWellKnownEndpoints } from './auth.well-known-endpoints';\r\nimport { JwtKeys } from './jwtkeys';\r\nimport { AuthorizationResult } from './authorization-result.enum';\r\nimport { UriEncoder } from './uri-encoder';\nexport class OidcSecurityService {\r\n\r\n     onModuleSetup: EventEmitter<any> = new EventEmitter<any>(true);\r\n     onAuthorizationResult: EventEmitter<AuthorizationResult> = new EventEmitter<AuthorizationResult>(true);\r\n\r\n    checkSessionChanged: boolean;\r\n    moduleSetup = false;\nprivate _isAuthorized = new BehaviorSubject<boolean>(false);\nprivate _isAuthorizedValue: boolean;\nprivate lastUserData: any = undefined;\nprivate _userData = new BehaviorSubject<any>('');\nprivate oidcSecurityValidation: OidcSecurityValidation;\nprivate jwtKeys: JwtKeys;\nprivate authWellKnownEndpointsLoaded = false;\nprivate runTokenValidationRunning: boolean;\n/**\n * @param {?} platformId\n * @param {?} http\n * @param {?} authConfiguration\n * @param {?} router\n * @param {?} oidcSecurityCheckSession\n * @param {?} oidcSecuritySilentRenew\n * @param {?} oidcSecurityUserService\n * @param {?} oidcSecurityCommon\n * @param {?} authWellKnownEndpoints\n */\nconstructor(\nprivate platformId: Object,\nprivate http: HttpClient,\nprivate authConfiguration: AuthConfiguration,\nprivate router: Router,\nprivate oidcSecurityCheckSession: OidcSecurityCheckSession,\nprivate oidcSecuritySilentRenew: OidcSecuritySilentRenew,\nprivate oidcSecurityUserService: OidcSecurityUserService,\nprivate oidcSecurityCommon: OidcSecurityCommon,\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints\r\n    ) {\r\n    }\n/**\n * @param {?} openIDImplicitFlowConfiguration\n * @return {?}\n */\nsetupModule(openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration): void {\r\n\r\n        this.authConfiguration.init(openIDImplicitFlowConfiguration);\r\n        this.oidcSecurityValidation = new OidcSecurityValidation(this.oidcSecurityCommon);\r\n\r\n        this.oidcSecurityCheckSession.onCheckSessionChanged.subscribe(() => { this.onCheckSessionChanged(); });\r\n        this.authWellKnownEndpoints.onWellKnownEndpointsLoaded.subscribe(() => { this.onWellKnownEndpointsLoaded(); });\r\n        this._userData.subscribe(() => { this.onUserDataChanged(); });\r\n\r\n        this.oidcSecurityCommon.setupModule();\r\n\r\n        const /** @type {?} */ userData = this.oidcSecurityCommon.userData;\r\n        if (userData !== '') {\r\n            this.setUserData(userData);\r\n        }\r\n\r\n        const /** @type {?} */ isAuthorized = this.oidcSecurityCommon.isAuthorized;\r\n        if (isAuthorized !== undefined) {\r\n            this.setIsAuthorized(isAuthorized);\r\n\r\n            // Start the silent renew\r\n            this.runTokenValidation();\r\n        }\r\n\r\n        this.oidcSecurityCommon.logDebug('STS server: ' + this.authConfiguration.stsServer);\r\n\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            // Client only code.\r\n            this.authWellKnownEndpoints.onWellKnownEndpointsLoaded.subscribe(() => {\r\n                this.moduleSetup = true;\r\n                this.onModuleSetup.emit();\r\n\r\n                if (this.authConfiguration.silent_renew) {\r\n                    this.oidcSecuritySilentRenew.initRenew();\r\n                }\r\n\r\n                if (this.authConfiguration.start_checksession) {\r\n                    this.oidcSecurityCheckSession.init().subscribe(() => {\r\n                        this.oidcSecurityCheckSession.pollServerSession(this.authConfiguration.client_id);\r\n                    });\r\n                }\r\n            });\r\n\r\n            this.authWellKnownEndpoints.setupModule();\r\n        } else {\r\n            this.moduleSetup = true;\r\n            this.onModuleSetup.emit();\r\n        }\r\n    }\n/**\n * @return {?}\n */\ngetUserData(): Observable<any> {\r\n        return this._userData.asObservable();\r\n    }\n/**\n * @param {?} userData\n * @return {?}\n */\nprivate setUserData(userData: any): void {\r\n        this.oidcSecurityCommon.userData = userData;\r\n        this._userData.next(userData);\r\n    }\n/**\n * @return {?}\n */\ngetIsAuthorized(): Observable<boolean> {\r\n        return this._isAuthorized.asObservable();\r\n    }\n/**\n * @param {?} isAuthorized\n * @return {?}\n */\nprivate setIsAuthorized(isAuthorized: boolean): void {\r\n        this._isAuthorizedValue = isAuthorized;\r\n        this._isAuthorized.next(isAuthorized);\r\n    }\n/**\n * @return {?}\n */\ngetToken(): any {\r\n        if (!this._isAuthorizedValue) {\r\n            return '';\r\n        }\r\n\r\n        let /** @type {?} */ token = this.oidcSecurityCommon.getAccessToken();\r\n        return decodeURIComponent(token);\r\n    }\n/**\n * @return {?}\n */\ngetIdToken(): any {\r\n        if (!this._isAuthorizedValue) {\r\n            return '';\r\n        }\r\n\r\n        let /** @type {?} */ token = this.oidcSecurityCommon.getIdToken();\r\n        return decodeURIComponent(token);\r\n    }\n/**\n * @param {?=} encode\n * @return {?}\n */\ngetPayloadFromIdToken(encode = false): any {\r\n        const /** @type {?} */ token = this.getIdToken();\r\n        return this.oidcSecurityValidation.getPayloadFromToken(token, encode);\r\n    }\n/**\n * @param {?} state\n * @return {?}\n */\nsetState(state: string): void {\r\n        this.oidcSecurityCommon.authStateControl = state;\r\n    }\n/**\n * @return {?}\n */\ngetState(): string {\r\n        return this.oidcSecurityCommon.authStateControl;\r\n    }\n/**\n * @param {?} params\n * @return {?}\n */\nsetCustomRequestParameters(params: { [key: string]: string | number | boolean }) {\r\n        this.oidcSecurityCommon.customRequestParams = params;\r\n    }\n/**\n * @return {?}\n */\nauthorize() {\r\n\r\n        let /** @type {?} */ data = this.oidcSecurityCommon.wellKnownEndpoints;\r\n        if (data && data !== '') {\r\n            this.authWellKnownEndpointsLoaded = true;\r\n        }\r\n\r\n        if (!this.authWellKnownEndpointsLoaded) {\r\n            this.oidcSecurityCommon.logError('Well known endpoints must be loaded before user can login!')\r\n            return;\r\n        }\r\n\r\n        if (!this.oidcSecurityValidation.config_validate_response_type(this.authConfiguration.response_type)) {\r\n            // invalid response_type\r\n            return;\r\n        }\r\n\r\n        this.resetAuthorizationData(false);\r\n\r\n        this.oidcSecurityCommon.logDebug('BEGIN Authorize, no auth data');\r\n\r\n        let /** @type {?} */ state = this.oidcSecurityCommon.authStateControl;\r\n        if (state === '' || state === null) {\r\n            state = Date.now() + '' + Math.random();\r\n            this.oidcSecurityCommon.authStateControl = state;\r\n        }\r\n\r\n        let /** @type {?} */ nonce = 'N' + Math.random() + '' + Date.now();\r\n        this.oidcSecurityCommon.authNonce = nonce;\r\n        this.oidcSecurityCommon.logDebug('AuthorizedController created. local state: ' + this.oidcSecurityCommon.authStateControl);\r\n\r\n        let /** @type {?} */ url = this.createAuthorizeUrl(nonce, state, this.authWellKnownEndpoints.authorization_endpoint);\r\n        window.location.href = url;\r\n    }\n/**\n * @param {?=} hash\n * @return {?}\n */\nauthorizedCallback(hash?: string) {\r\n        let /** @type {?} */ silentRenew = this.oidcSecurityCommon.silentRenewRunning;\r\n        let /** @type {?} */ isRenewProcess = (silentRenew === 'running');\r\n\r\n        this.oidcSecurityCommon.logDebug('BEGIN authorizedCallback, no auth data');\r\n        this.resetAuthorizationData(isRenewProcess);\r\n\r\n        hash = hash || window.location.hash.substr(1);\r\n\r\n        let /** @type {?} */ result: any = hash.split('&').reduce(function (result: any, item: string) {\r\n            let /** @type {?} */ parts = item.split('=');\r\n            result[parts[0]] = parts[1];\r\n            return result;\r\n        }, {});\r\n        this.oidcSecurityCommon.authResult = result;\r\n\r\n        this.oidcSecurityCommon.logDebug(result);\r\n        this.oidcSecurityCommon.logDebug('authorizedCallback created, begin token validation');\r\n\r\n        let /** @type {?} */ access_token = '';\r\n        let /** @type {?} */ id_token = '';\r\n        let /** @type {?} */ authResponseIsValid = false;\r\n        let /** @type {?} */ decoded_id_token: any;\r\n\r\n        this.getSigningKeys()\r\n            .subscribe(jwtKeys => {\r\n                this.jwtKeys = jwtKeys;\r\n\r\n                if (!result.error) {\r\n\r\n                    // validate state\r\n                    if (this.oidcSecurityValidation.validateStateFromHashCallback(result.state, this.oidcSecurityCommon.authStateControl)) {\r\n                        if (this.authConfiguration.response_type === 'id_token token') {\r\n                            access_token = result.access_token;\r\n                        }\r\n                        id_token = result.id_token;\r\n\r\n                        decoded_id_token = this.oidcSecurityValidation.getPayloadFromToken(id_token, false);\r\n\r\n                        // validate jwt signature\r\n                        if (this.oidcSecurityValidation.validate_signature_id_token(id_token, this.jwtKeys)) {\r\n                            // validate nonce\r\n                            if (this.oidcSecurityValidation.validate_id_token_nonce(decoded_id_token, this.oidcSecurityCommon.authNonce)) {\r\n                                // validate required fields id_token\r\n                                if (this.oidcSecurityValidation.validate_required_id_token(decoded_id_token)) {\r\n                                    // validate max offset from the id_token issue to now\r\n                                    if (this.oidcSecurityValidation.validate_id_token_iat_max_offset(decoded_id_token, this.authConfiguration.max_id_token_iat_offset_allowed_in_seconds)) {\r\n                                        // validate iss\r\n                                        if (this.oidcSecurityValidation.validate_id_token_iss(decoded_id_token, this.authWellKnownEndpoints.issuer)) {\r\n                                            // validate aud\r\n                                            if (this.oidcSecurityValidation.validate_id_token_aud(decoded_id_token, this.authConfiguration.client_id)) {\r\n                                                // validate_id_token_exp_not_expired\r\n                                                if (this.oidcSecurityValidation.validate_id_token_exp_not_expired(decoded_id_token)) {\r\n                                                    // flow id_token token\r\n                                                    if (this.authConfiguration.response_type === 'id_token token') {\r\n                                                        // valiadate at_hash and access_token\r\n                                                        if (this.oidcSecurityValidation.validate_id_token_at_hash(access_token, decoded_id_token.at_hash) || !access_token) {\r\n                                                            authResponseIsValid = true;\r\n                                                            this.successful_validation();\r\n                                                        } else {\r\n                                                            this.oidcSecurityCommon.logWarning('authorizedCallback incorrect at_hash');\r\n                                                        }\r\n                                                    } else {\r\n                                                        authResponseIsValid = true;\r\n                                                        this.successful_validation();\r\n                                                    }\r\n                                                } else {\r\n                                                    this.oidcSecurityCommon.logWarning('authorizedCallback token expired');\r\n                                                }\r\n                                            } else {\r\n                                                this.oidcSecurityCommon.logWarning('authorizedCallback incorrect aud');\r\n                                            }\r\n                                        } else {\r\n                                            this.oidcSecurityCommon.logWarning('authorizedCallback incorrect iss does not match authWellKnownEndpoints issuer');\r\n                                        }\r\n                                    } else {\r\n                                        this.oidcSecurityCommon.logWarning('authorizedCallback Validation, iat rejected id_token was issued too far away from the current time');\r\n                                    }\r\n                                } else {\r\n                                    this.oidcSecurityCommon.logDebug('authorizedCallback Validation, one of the REQUIRED properties missing from id_token');\r\n                                }\r\n                            } else {\r\n                                this.oidcSecurityCommon.logWarning('authorizedCallback incorrect nonce');\r\n                            }\r\n                        } else {\r\n                            this.oidcSecurityCommon.logDebug('authorizedCallback Signature validation failed id_token');\r\n                        }\r\n                    } else {\r\n                        this.oidcSecurityCommon.logWarning('authorizedCallback incorrect state');\r\n                    }\r\n                }\r\n\r\n                this.oidcSecurityCommon.silentRenewRunning = '';\r\n\r\n                if (authResponseIsValid) {\r\n                    this.setAuthorizationData(access_token, id_token);\r\n                    if (this.authConfiguration.auto_userinfo) {\r\n                        this.getUserinfo(isRenewProcess, result, id_token, decoded_id_token).subscribe((response) => {\r\n                            if (response) {\r\n                                if (this.authConfiguration.trigger_authorization_result_event) {\r\n                                    this.onAuthorizationResult.emit(AuthorizationResult.authorized);\r\n                                } else {\r\n                                    this.router.navigate([this.authConfiguration.post_login_route]);\r\n                                }\r\n                            } else {\r\n                                if (this.authConfiguration.trigger_authorization_result_event) {\r\n                                    this.onAuthorizationResult.emit(AuthorizationResult.unauthorized);\r\n                                } else {\r\n                                    this.router.navigate([this.authConfiguration.unauthorized_route]);\r\n                                }\r\n                            }\r\n                        });\r\n                    } else {\r\n                        this.runTokenValidation();\r\n                        if (this.authConfiguration.trigger_authorization_result_event) {\r\n                            this.onAuthorizationResult.emit(AuthorizationResult.authorized);\r\n                        } else {\r\n                            this.router.navigate([this.authConfiguration.post_login_route]);\r\n                        }\r\n                    }\r\n                } else { // something went wrong\r\n                    this.oidcSecurityCommon.logDebug('authorizedCallback, token(s) validation failed, resetting');\r\n                    this.resetAuthorizationData(false);\r\n                    if (this.authConfiguration.trigger_authorization_result_event) {\r\n                        this.onAuthorizationResult.emit(AuthorizationResult.unauthorized);\r\n                    } else {\r\n                        this.router.navigate([this.authConfiguration.unauthorized_route]);\r\n                    }\r\n                }\r\n            });\r\n    }\n/**\n * @param {?=} isRenewProcess\n * @param {?=} result\n * @param {?=} id_token\n * @param {?=} decoded_id_token\n * @return {?}\n */\ngetUserinfo(isRenewProcess = false, result?: any, id_token?: any, decoded_id_token?: any): Observable<boolean> {\r\n        result = result ? result : this.oidcSecurityCommon.authResult;\r\n        id_token = id_token ? id_token : this.oidcSecurityCommon.idToken;\r\n        decoded_id_token = decoded_id_token ? decoded_id_token : this.oidcSecurityValidation.getPayloadFromToken(id_token, false);\r\n\r\n        return new Observable<boolean>(observer => {\r\n            // flow id_token token\r\n            if (this.authConfiguration.response_type === 'id_token token') {\r\n                if (isRenewProcess) {\r\n                    this.oidcSecurityCommon.sessionState = result.session_state;\r\n                    observer.next(true);\r\n                    observer.complete();\r\n                } else {\r\n                    this.oidcSecurityUserService.initUserData()\r\n                        .subscribe(() => {\r\n                            this.oidcSecurityCommon.logDebug('authorizedCallback id_token token flow');\r\n                            if (this.oidcSecurityValidation.validate_userdata_sub_id_token(decoded_id_token.sub, this.oidcSecurityUserService.userData.sub)) {\r\n                                this.setUserData(this.oidcSecurityUserService.userData);\r\n                                this.oidcSecurityCommon.logDebug(this.oidcSecurityCommon.accessToken);\r\n                                this.oidcSecurityCommon.logDebug(this.oidcSecurityUserService.userData);\r\n\r\n                                this.oidcSecurityCommon.sessionState = result.session_state;\r\n\r\n                                this.runTokenValidation();\r\n                                observer.next(true);\r\n                            } else { // something went wrong, userdata sub does not match that from id_token\r\n                                this.oidcSecurityCommon.logWarning('authorizedCallback, User data sub does not match sub in id_token');\r\n                                this.oidcSecurityCommon.logDebug('authorizedCallback, token(s) validation failed, resetting');\r\n                                this.resetAuthorizationData(false);\r\n                                observer.next(false);\r\n                            }\r\n                            observer.complete();\r\n                        });\r\n                }\r\n            } else { // flow id_token\r\n                this.oidcSecurityCommon.logDebug('authorizedCallback id_token flow');\r\n                this.oidcSecurityCommon.logDebug(this.oidcSecurityCommon.accessToken);\r\n\r\n                // userData is set to the id_token decoded. No access_token.\r\n                this.oidcSecurityUserService.userData = decoded_id_token;\r\n                this.setUserData(this.oidcSecurityUserService.userData);\r\n\r\n                this.oidcSecurityCommon.sessionState = result.session_state;\r\n\r\n                if (!isRenewProcess) {\r\n                    this.runTokenValidation();\r\n                }\r\n\r\n                observer.next(true);\r\n                observer.complete();\r\n            }\r\n        });\r\n    }\n/**\n * @return {?}\n */\nlogoff() {\r\n        // /connect/endsession?id_token_hint=...&post_logout_redirect_uri=https://myapp.com\r\n        this.oidcSecurityCommon.logDebug('BEGIN Authorize, no auth data');\r\n\r\n        if (this.authWellKnownEndpoints.end_session_endpoint) {\r\n            let /** @type {?} */ end_session_endpoint = this.authWellKnownEndpoints.end_session_endpoint;\r\n            let /** @type {?} */ id_token_hint = this.oidcSecurityCommon.idToken;\r\n            let /** @type {?} */ url = this.createEndSessionUrl(end_session_endpoint, id_token_hint);\r\n\r\n            this.resetAuthorizationData(false);\r\n\r\n            if (this.authConfiguration.start_checksession && this.checkSessionChanged) {\r\n                this.oidcSecurityCommon.logDebug('only local login cleaned up, server session has changed');\r\n            } else {\r\n                window.location.href = url;\r\n            }\r\n        } else {\r\n            this.resetAuthorizationData(false);\r\n            this.oidcSecurityCommon.logDebug('only local login cleaned up, no end_session_endpoint');\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprivate successful_validation() {\r\n        this.oidcSecurityCommon.authNonce = '';\r\n\r\n        if (this.authConfiguration.auto_clean_state_after_authentication) {\r\n            this.oidcSecurityCommon.authStateControl = '';\r\n        }\r\n        this.oidcSecurityCommon.logDebug('AuthorizedCallback token(s) validated, continue');\r\n    }\n/**\n * @return {?}\n */\nprivate refreshSession() {\r\n        this.oidcSecurityCommon.logDebug('BEGIN refresh session Authorize');\r\n\r\n        let /** @type {?} */ state = this.oidcSecurityCommon.authStateControl;\r\n        if (state === '' || state === null) {\r\n            state = Date.now() + '' + Math.random();\r\n            this.oidcSecurityCommon.authStateControl = state;\r\n        }\r\n\r\n        let /** @type {?} */ nonce = 'N' + Math.random() + '' + Date.now();\r\n        this.oidcSecurityCommon.authNonce = nonce;\r\n        this.oidcSecurityCommon.logDebug('RefreshSession created. adding myautostate: ' + this.oidcSecurityCommon.authStateControl);\r\n\r\n        let /** @type {?} */ url = this.createAuthorizeUrl(nonce, state, this.authWellKnownEndpoints.authorization_endpoint, 'none');\r\n\r\n        this.oidcSecurityCommon.silentRenewRunning = 'running';\r\n        this.oidcSecuritySilentRenew.startRenew(url);\r\n    }\n/**\n * @param {?} access_token\n * @param {?} id_token\n * @return {?}\n */\nprivate setAuthorizationData(access_token: any, id_token: any) {\r\n        if (this.oidcSecurityCommon.accessToken !== '') {\r\n            this.oidcSecurityCommon.accessToken = '';\r\n        }\r\n\r\n        this.oidcSecurityCommon.logDebug(access_token);\r\n        this.oidcSecurityCommon.logDebug(id_token);\r\n        this.oidcSecurityCommon.logDebug('storing to storage, getting the roles');\r\n        this.oidcSecurityCommon.accessToken = access_token;\r\n        this.oidcSecurityCommon.idToken = id_token;\r\n        this.setIsAuthorized(true);\r\n        this.oidcSecurityCommon.isAuthorized = true;\r\n    }\n/**\n * @param {?} nonce\n * @param {?} state\n * @param {?} authorization_endpoint\n * @param {?=} prompt\n * @return {?}\n */\nprivate createAuthorizeUrl(nonce: string, state: string, authorization_endpoint: string, prompt?: string): string {\r\n\r\n        let /** @type {?} */ urlParts = authorization_endpoint.split('?');\r\n        let /** @type {?} */ authorizationUrl = urlParts[0];\r\n        let /** @type {?} */ params = new HttpParams({ fromString: urlParts[1], encoder: new UriEncoder() });\r\n        params = params.set('client_id', this.authConfiguration.client_id);\r\n        params = params.append('redirect_uri', this.authConfiguration.redirect_url);\r\n        params = params.append('response_type', this.authConfiguration.response_type);\r\n        params = params.append('scope', this.authConfiguration.scope);\r\n        params = params.append('nonce', nonce);\r\n        params = params.append('state', state);\r\n        if (prompt) {\r\n            params = params.append('prompt', prompt);\r\n        }\r\n        if (this.authConfiguration.hd_param) {\r\n            params = params.append('hd', this.authConfiguration.hd_param);\r\n        }\r\n\r\n        let /** @type {?} */ customParams = Object.assign({}, this.oidcSecurityCommon.customRequestParams);\r\n\r\n        Object.keys(customParams).forEach(key => {\r\n            params = params.append(key, customParams[key].toString());\r\n        });\r\n\r\n        return `${authorizationUrl}?${params}`;\r\n    }\n/**\n * @param {?} end_session_endpoint\n * @param {?} id_token_hint\n * @return {?}\n */\nprivate createEndSessionUrl(end_session_endpoint: string, id_token_hint: string) {\r\n        let /** @type {?} */ urlParts = end_session_endpoint.split('?');\r\n\r\n        let /** @type {?} */ authorizationEndsessionUrl = urlParts[0];\r\n\r\n        let /** @type {?} */ params = new HttpParams({ fromString: urlParts[1], encoder: new UriEncoder() });\r\n        params = params.set('id_token_hint', id_token_hint);\r\n        params = params.append('post_logout_redirect_uri', this.authConfiguration.post_logout_redirect_uri);\r\n\r\n        return `${authorizationEndsessionUrl}?${params}`;\r\n    }\n/**\n * @param {?} isRenewProcess\n * @return {?}\n */\nprivate resetAuthorizationData(isRenewProcess: boolean) {\r\n        if (!isRenewProcess) {\r\n            if (this.authConfiguration.auto_userinfo) {\r\n                // Clear user data. Fixes #97.\r\n                this.setUserData('');\r\n            }\r\n            this.setIsAuthorized(false);\r\n            this.oidcSecurityCommon.resetStorageData(isRenewProcess);\r\n            this.checkSessionChanged = false;\r\n        }\r\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nhandleError(error: any) {\r\n        this.oidcSecurityCommon.logError(error);\r\n        if (error.status == 403) {\r\n            if (this.authConfiguration.trigger_authorization_result_event) {\r\n                this.onAuthorizationResult.emit(AuthorizationResult.unauthorized);\r\n            } else {\r\n                this.router.navigate([this.authConfiguration.forbidden_route]);\r\n            }\r\n        } else if (error.status == 401) {\r\n            let /** @type {?} */ silentRenew = this.oidcSecurityCommon.silentRenewRunning;\r\n            this.resetAuthorizationData(silentRenew !== '');\r\n            if (this.authConfiguration.trigger_authorization_result_event) {\r\n                this.onAuthorizationResult.emit(AuthorizationResult.unauthorized);\r\n            } else {\r\n                this.router.navigate([this.authConfiguration.unauthorized_route]);\r\n            }\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprivate onCheckSessionChanged() {\r\n        this.oidcSecurityCommon.logDebug('onCheckSessionChanged');\r\n        this.checkSessionChanged = true;\r\n    }\n/**\n * @return {?}\n */\nprivate onWellKnownEndpointsLoaded() {\r\n        this.oidcSecurityCommon.logDebug('onWellKnownEndpointsLoaded');\r\n        this.authWellKnownEndpointsLoaded = true;\r\n    }\n/**\n * @return {?}\n */\nprivate onUserDataChanged() {\r\n        this.oidcSecurityCommon.logDebug(`onUserDataChanged: last = ${this.lastUserData}, new = ${this._userData.value}`);\r\n\r\n        if (this.lastUserData && !this._userData.value) {\r\n            this.oidcSecurityCommon.logDebug('onUserDataChanged: Logout detected.');\r\n            // TODO should we have an action here\r\n        }\r\n        this.lastUserData = this._userData.value;\r\n    }\n/**\n * @return {?}\n */\nprivate getSigningKeys(): Observable<JwtKeys> {\r\n        this.oidcSecurityCommon.logDebug('jwks_uri: ' + this.authWellKnownEndpoints.jwks_uri);\r\n        return this.http.get<JwtKeys>(this.authWellKnownEndpoints.jwks_uri)\r\n            .catch(this.handleErrorGetSigningKeys);\r\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleErrorGetSigningKeys(error: Response | any) {\r\n        let /** @type {?} */ errMsg: string;\r\n        if (error instanceof Response) {\r\n            const /** @type {?} */ body = error.json() || {};\r\n            const /** @type {?} */ err = JSON.stringify(body);\r\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n        } else {\r\n            errMsg = error.message ? error.message : error.toString();\r\n        }\r\n        console.error(errMsg);\r\n        return Observable.throw(errMsg);\r\n    }\n/**\n * @return {?}\n */\nprivate runTokenValidation() {\r\n        if (this.runTokenValidationRunning) {\r\n            return;\r\n        }\r\n        this.runTokenValidationRunning = true;\r\n        let /** @type {?} */ source = Observable.timer(5000, 3000)\r\n            .timeInterval()\r\n            .pluck('interval')\r\n            .take(10000);\r\n\r\n        source.subscribe(() => {\r\n            if (this._userData.value) {\r\n                if (this.oidcSecurityValidation.isTokenExpired(this.oidcSecurityCommon.idToken, this.authConfiguration.silent_renew_offset_in_seconds)) {\r\n                    this.oidcSecurityCommon.logDebug('IsAuthorized: id_token isTokenExpired, start silent renew if active');\r\n\r\n                    if (this.authConfiguration.silent_renew) {\r\n                        this.refreshSession();\r\n                    } else {\r\n                        this.resetAuthorizationData(false);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n            (err: any) => {\r\n                this.oidcSecurityCommon.logError('Error: ' + err);\r\n            },\r\n            () => {\r\n                this.oidcSecurityCommon.logDebug('Completed');\r\n            });\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n{type: HttpClient, },\n{type: AuthConfiguration, },\n{type: Router, },\n{type: OidcSecurityCheckSession, },\n{type: OidcSecuritySilentRenew, },\n{type: OidcSecurityUserService, },\n{type: OidcSecurityCommon, },\n{type: AuthWellKnownEndpoints, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onModuleSetup': [{ type: Output },],\n'onAuthorizationResult': [{ type: Output },],\n};\n}\n\nfunction OidcSecurityService_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityService.ctorParameters;\n/** @type {?} */\nOidcSecurityService.propDecorators;\n/** @type {?} */\nOidcSecurityService.prototype.onModuleSetup;\n/** @type {?} */\nOidcSecurityService.prototype.onAuthorizationResult;\n/** @type {?} */\nOidcSecurityService.prototype.checkSessionChanged;\n/** @type {?} */\nOidcSecurityService.prototype.moduleSetup;\n/** @type {?} */\nOidcSecurityService.prototype._isAuthorized;\n/** @type {?} */\nOidcSecurityService.prototype._isAuthorizedValue;\n/** @type {?} */\nOidcSecurityService.prototype.lastUserData;\n/** @type {?} */\nOidcSecurityService.prototype._userData;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityValidation;\n/** @type {?} */\nOidcSecurityService.prototype.jwtKeys;\n/** @type {?} */\nOidcSecurityService.prototype.authWellKnownEndpointsLoaded;\n/** @type {?} */\nOidcSecurityService.prototype.runTokenValidationRunning;\n/** @type {?} */\nOidcSecurityService.prototype.platformId;\n/** @type {?} */\nOidcSecurityService.prototype.http;\n/** @type {?} */\nOidcSecurityService.prototype.authConfiguration;\n/** @type {?} */\nOidcSecurityService.prototype.router;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityCheckSession;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecuritySilentRenew;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityUserService;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityCommon;\n/** @type {?} */\nOidcSecurityService.prototype.authWellKnownEndpoints;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { HttpParameterCodec } from '@angular/common/http';\nexport class UriEncoder implements HttpParameterCodec {\n/**\n * @param {?} key\n * @return {?}\n */\nencodeKey(key: string): string {\n        return encodeURIComponent(key);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nencodeValue(value: string): string {\n        return encodeURIComponent(value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\ndecodeKey(key: string): string {\n        return decodeURIComponent(key);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\ndecodeValue(value: string): string {\n        return decodeURIComponent(value);\n    }\n\n}\n","\nexport type AuthorizationResult = number;\nexport let AuthorizationResult: any = {};\nAuthorizationResult.authorized = 1;\nAuthorizationResult.forbidden = 2;\nAuthorizationResult.unauthorized = 3;\nAuthorizationResult[AuthorizationResult.authorized] = \"authorized\";\nAuthorizationResult[AuthorizationResult.forbidden] = \"forbidden\";\nAuthorizationResult[AuthorizationResult.unauthorized] = \"unauthorized\";\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport'rxjs/add/operator/map';\r\nimport'rxjs/add/operator/catch';\r\nimport'rxjs/add/observable/throw';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { AuthWellKnownEndpoints } from './auth.well-known-endpoints';\nexport class OidcSecurityUserService {\r\n\r\n    userData: any = '';\n/**\n * @param {?} http\n * @param {?} oidcSecurityCommon\n * @param {?} authWellKnownEndpoints\n */\nconstructor(\nprivate http: HttpClient,\nprivate oidcSecurityCommon: OidcSecurityCommon,\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints\r\n    ) {\r\n    }\n/**\n * @return {?}\n */\ninitUserData() {\r\n        return this.getIdentityUserData()\r\n            .map(data => this.userData = data);\r\n    }\nprivate getIdentityUserData = (): Observable<any> => {\r\n\r\n        let /** @type {?} */ headers = new HttpHeaders();\r\n        headers = headers.set('Accept', 'application/json');\r\n\r\n        let /** @type {?} */ token = this.oidcSecurityCommon.getAccessToken();\r\n\r\n        if (token !== '') {\r\n            headers = headers.set('Authorization', 'Bearer ' + decodeURIComponent(token));\r\n        }\r\n\r\n        return this.http.get(this.authWellKnownEndpoints.userinfo_endpoint, {\r\n            headers: headers,\r\n        });\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpClient, },\n{type: OidcSecurityCommon, },\n{type: AuthWellKnownEndpoints, },\n];\n}\n\nfunction OidcSecurityUserService_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityUserService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityUserService.ctorParameters;\n/** @type {?} */\nOidcSecurityUserService.prototype.userData;\n/** @type {?} */\nOidcSecurityUserService.prototype.getIdentityUserData;\n/** @type {?} */\nOidcSecurityUserService.prototype.http;\n/** @type {?} */\nOidcSecurityUserService.prototype.oidcSecurityCommon;\n/** @type {?} */\nOidcSecurityUserService.prototype.authWellKnownEndpoints;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { Observable } from 'rxjs/Observable';\nexport class OidcSecuritySilentRenew {\nprivate sessionIframe: any;\n/**\n * @param {?} oidcSecurityCommon\n */\nconstructor(private oidcSecurityCommon: OidcSecurityCommon) {\r\n    }\n/**\n * @return {?}\n */\ninitRenew() {\r\n        let /** @type {?} */ existsparent = undefined;\r\n        try {\r\n          let /** @type {?} */ parentdoc = window.parent.document;\r\n          if (!parentdoc) {\r\n              throw new Error('Unaccessible');\r\n          }\r\n\r\n          existsparent =  parentdoc.getElementById('myiFrameForSilentRenew');\r\n        } catch ( /** @type {?} */e) {\r\n            // not accessible\r\n        }\r\n        let /** @type {?} */ exists = window.document.getElementById('myiFrameForSilentRenew');\r\n        if (existsparent) {\r\n            this.sessionIframe = existsparent;\r\n        } else if (exists) {\r\n            this.sessionIframe = exists;\r\n        }\r\n\r\n        if (!exists && !existsparent) {\r\n            this.sessionIframe = window.document.createElement('iframe');\r\n            this.sessionIframe.id = 'myiFrameForSilentRenew';\r\n            this.oidcSecurityCommon.logDebug(this.sessionIframe);\r\n            this.sessionIframe.style.display = 'none';\r\n\r\n            window.document.body.appendChild(this.sessionIframe);\r\n        }\r\n    }\n/**\n * @param {?} url\n * @return {?}\n */\nstartRenew(url: string) {\r\n        let /** @type {?} */ existsparent = undefined;\r\n        try {\r\n          let /** @type {?} */ parentdoc = window.parent.document;\r\n          if (!parentdoc) {\r\n              throw new Error('Unaccessible');\r\n          }\r\n\r\n          existsparent =  parentdoc.getElementById('myiFrameForSilentRenew');\r\n        } catch ( /** @type {?} */e) {\r\n            // not accessible\r\n        }\r\n        let /** @type {?} */ exists = window.document.getElementById('myiFrameForSilentRenew');\r\n        if (existsparent) {\r\n            this.sessionIframe = existsparent;\r\n        } else if (exists) {\r\n            this.sessionIframe = exists;\r\n        }\r\n\r\n        this.oidcSecurityCommon.logDebug('startRenew for URL:' + url);\r\n        this.sessionIframe.src = url;\r\n\r\n        return Observable.create((observer: Observer<any>) => {\r\n            this.sessionIframe.onload = () => {\r\n                observer.next(this);\r\n                observer.complete();\r\n            }\r\n        });\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OidcSecurityCommon, },\n];\n}\n\nfunction OidcSecuritySilentRenew_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecuritySilentRenew.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecuritySilentRenew.ctorParameters;\n/** @type {?} */\nOidcSecuritySilentRenew.prototype.sessionIframe;\n/** @type {?} */\nOidcSecuritySilentRenew.prototype.oidcSecurityCommon;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, EventEmitter, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport'rxjs/add/operator/map';\r\nimport'rxjs/add/operator/catch';\r\nimport'rxjs/add/operator/timeInterval';\r\nimport'rxjs/add/operator/pluck';\r\nimport'rxjs/add/operator/take';\r\nimport'rxjs/add/observable/throw';\r\nimport'rxjs/add/observable/interval';\r\nimport'rxjs/add/observable/timer';\r\nimport'rxjs/add/observable/empty';\r\nimport { AuthConfiguration } from '../modules/auth.configuration';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { AuthWellKnownEndpoints } from './auth.well-known-endpoints';\nexport class OidcSecurityCheckSession {\nprivate sessionIframe: any;\nprivate iframeMessageEvent: any;\r\n\r\n     onCheckSessionChanged: EventEmitter<any> = new EventEmitter<any>(true);\n/**\n * @param {?} authConfiguration\n * @param {?} oidcSecurityCommon\n * @param {?} authWellKnownEndpoints\n */\nconstructor(\nprivate authConfiguration: AuthConfiguration,\nprivate oidcSecurityCommon: OidcSecurityCommon,\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints\r\n    ) {\r\n    }\n/**\n * @return {?}\n */\ninit() {\r\n        let /** @type {?} */ exists = window.parent.document.getElementById('myiFrameForCheckSession');\r\n        if (!exists) {\r\n            this.sessionIframe = window.document.createElement('iframe');\r\n\r\n            this.sessionIframe.id = 'myiFrameForCheckSession';\r\n            this.oidcSecurityCommon.logDebug(this.sessionIframe);\r\n            this.sessionIframe.style.display = 'none';\r\n            this.sessionIframe.src = this.authWellKnownEndpoints.check_session_iframe;\r\n\r\n            window.document.body.appendChild(this.sessionIframe);\r\n            this.iframeMessageEvent = this.messageHandler.bind(this);\r\n            window.addEventListener('message', this.iframeMessageEvent, false);\r\n\r\n            return Observable.create((observer: Observer<any>) => {\r\n                this.sessionIframe.onload = () => {\r\n                    observer.next(this);\r\n                    observer.complete();\r\n                }\r\n            });\r\n        }\r\n\r\n        return Observable.empty<Response>();\r\n    }\n/**\n * @param {?} clientId\n * @return {?}\n */\npollServerSession(clientId: any) {\r\n        let /** @type {?} */ source = Observable.timer(3000, 3000)\r\n            .timeInterval()\r\n            .pluck('interval')\r\n            .take(10000);\r\n\r\n        source.subscribe(() => {\r\n                this.oidcSecurityCommon.logDebug(this.sessionIframe);\r\n                let /** @type {?} */ session_state = this.oidcSecurityCommon.sessionState;\r\n                if (session_state && session_state !== '') {\r\n                    this.sessionIframe.contentWindow.postMessage(clientId + ' ' + session_state, this.authConfiguration.stsServer);\r\n                }\r\n            },\r\n            (err: any) => {\r\n                this.oidcSecurityCommon.logError('pollServerSession error: ' + err);\r\n            },\r\n            () => {\r\n                this.oidcSecurityCommon.logDebug('checksession pollServerSession completed');\r\n            });\r\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate messageHandler(e: any) {\r\n        if (e.origin === this.authConfiguration.stsServer &&\r\n            e.source === this.sessionIframe.contentWindow\r\n        ) {\r\n            if (e.data === 'error') {\r\n                this.oidcSecurityCommon.logWarning('error from checksession messageHandler');\r\n            } else if (e.data === 'changed') {\r\n                this.onCheckSessionChanged.emit();\r\n            } else {\r\n                this.oidcSecurityCommon.logDebug(e.data + ' from checksession messageHandler');\r\n            }\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n{type: OidcSecurityCommon, },\n{type: AuthWellKnownEndpoints, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onCheckSessionChanged': [{ type: Output },],\n};\n}\n\nfunction OidcSecurityCheckSession_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityCheckSession.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityCheckSession.ctorParameters;\n/** @type {?} */\nOidcSecurityCheckSession.propDecorators;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.sessionIframe;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.iframeMessageEvent;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.onCheckSessionChanged;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.authConfiguration;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.oidcSecurityCommon;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.authWellKnownEndpoints;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, EventEmitter, Output } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport'rxjs/add/operator/map';\r\nimport'rxjs/add/operator/catch';\r\nimport'rxjs/add/observable/throw';\r\nimport { AuthConfiguration } from '../modules/auth.configuration';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\nexport class AuthWellKnownEndpoints {\r\n\r\n     onWellKnownEndpointsLoaded: EventEmitter<any> = new EventEmitter<any>(true);\r\n\r\n    issuer: string;\r\n    jwks_uri: string;\r\n    authorization_endpoint: string;\r\n    token_endpoint: string;\r\n    userinfo_endpoint: string;\r\n    end_session_endpoint: string;\r\n    check_session_iframe: string;\r\n    revocation_endpoint: string;\r\n    introspection_endpoint: string;\n/**\n * @param {?} http\n * @param {?} authConfiguration\n * @param {?} oidcSecurityCommon\n */\nconstructor(\nprivate http: HttpClient,\nprivate authConfiguration: AuthConfiguration,\nprivate oidcSecurityCommon: OidcSecurityCommon\r\n    ) {\r\n    }\n/**\n * @return {?}\n */\nsetupModule() {\r\n        let /** @type {?} */ data = this.oidcSecurityCommon.wellKnownEndpoints;\r\n        this.oidcSecurityCommon.logDebug(data);\r\n        if (data && data !== '') {\r\n            this.oidcSecurityCommon.logDebug('AuthWellKnownEndpoints already defined');\r\n            this.issuer = data.issuer;\r\n            this.jwks_uri = data.jwks_uri;\r\n            this.authorization_endpoint = data.authorization_endpoint;\r\n            this.token_endpoint = data.token_endpoint;\r\n            this.userinfo_endpoint = data.userinfo_endpoint;\r\n\r\n            if (data.end_session_endpoint) {\r\n                this.end_session_endpoint = data.end_session_endpoint;\r\n\r\n            };\r\n\r\n            if (data.check_session_iframe) {\r\n                this.check_session_iframe = data.check_session_iframe;\r\n            };\r\n\r\n            if (data.revocation_endpoint) {\r\n                this.revocation_endpoint = data.revocation_endpoint;\r\n            };\r\n\r\n            if (data.introspection_endpoint) {\r\n                this.introspection_endpoint = data.introspection_endpoint;\r\n            }\r\n\r\n            this.onWellKnownEndpointsLoaded.emit();\r\n        } else {\r\n            this.oidcSecurityCommon.logDebug('AuthWellKnownEndpoints first time, get from the server');\r\n            this.getWellKnownEndpoints()\r\n                .subscribe((data: any) => {\r\n                    this.issuer = data.issuer;\r\n                    this.jwks_uri = data.jwks_uri;\r\n                    this.authorization_endpoint = data.authorization_endpoint;\r\n                    this.token_endpoint = data.token_endpoint;\r\n                    this.userinfo_endpoint = data.userinfo_endpoint;\r\n\r\n                    if (data.end_session_endpoint) {\r\n                        this.end_session_endpoint = data.end_session_endpoint;\r\n                    };\r\n\r\n                    if (data.check_session_iframe) {\r\n                        this.check_session_iframe = data.check_session_iframe;\r\n                    };\r\n\r\n                    if (data.revocation_endpoint) {\r\n                        this.revocation_endpoint = data.revocation_endpoint;\r\n                    };\r\n\r\n                    if (data.introspection_endpoint) {\r\n                        this.introspection_endpoint = data.introspection_endpoint;\r\n                    }\r\n\r\n                    this.oidcSecurityCommon.wellKnownEndpoints = data;\r\n                    this.oidcSecurityCommon.logDebug(data);\r\n\r\n                    this.onWellKnownEndpointsLoaded.emit();\r\n                });\r\n        }\r\n    }\nprivate getWellKnownEndpoints = (): Observable<any> => {\r\n\r\n        let /** @type {?} */ headers = new HttpHeaders();\r\n        headers = headers.set('Accept', 'application/json');\r\n\r\n        let /** @type {?} */ url = this.authConfiguration.stsServer + '/.well-known/openid-configuration';\r\n        if (this.authConfiguration.override_well_known_configuration) {\r\n            url = this.authConfiguration.override_well_known_configuration_url;\r\n        }\r\n\r\n        return this.http.get(url, {\r\n            headers: headers,\r\n        });\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpClient, },\n{type: AuthConfiguration, },\n{type: OidcSecurityCommon, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onWellKnownEndpointsLoaded': [{ type: Output },],\n};\n}\n\nfunction AuthWellKnownEndpoints_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthWellKnownEndpoints.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthWellKnownEndpoints.ctorParameters;\n/** @type {?} */\nAuthWellKnownEndpoints.propDecorators;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.onWellKnownEndpointsLoaded;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.issuer;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.jwks_uri;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.authorization_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.token_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.userinfo_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.end_session_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.check_session_iframe;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.revocation_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.introspection_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.getWellKnownEndpoints;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.http;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.authConfiguration;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.oidcSecurityCommon;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\n\r\nimport { KJUR, KEYUTIL, hextob64u } from 'jsrsasign';\nexport class OidcSecurityValidation {\n/**\n * @param {?} oidcSecurityCommon\n */\nconstructor(private oidcSecurityCommon: OidcSecurityCommon) {\r\n    }\n/**\n * @param {?} token\n * @param {?=} offsetSeconds\n * @return {?}\n */\nisTokenExpired(token: string, offsetSeconds?: number): boolean {\r\n\r\n        let /** @type {?} */ decoded: any;\r\n        decoded = this.getPayloadFromToken(token, false);\r\n\r\n        return !(this.validate_id_token_exp_not_expired(decoded, offsetSeconds));\r\n    }\n/**\n * @param {?} decoded_id_token\n * @param {?=} offsetSeconds\n * @return {?}\n */\nvalidate_id_token_exp_not_expired(decoded_id_token: string, offsetSeconds?: number): boolean {\r\n        let /** @type {?} */ tokenExpirationDate = this.getTokenExpirationDate(decoded_id_token);\r\n        offsetSeconds = offsetSeconds || 0;\r\n\r\n        if (tokenExpirationDate == null) {\r\n            return false;\r\n        }\r\n\r\n        // Token not expired?\r\n        return (tokenExpirationDate.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\r\n    }\n/**\n * @param {?} dataIdToken\n * @return {?}\n */\nvalidate_required_id_token(dataIdToken: any): boolean {\r\n\r\n        let /** @type {?} */ validated = true;\r\n        if (!dataIdToken.hasOwnProperty('iss')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning('iss is missing, this is required in the id_token');\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('sub')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning('sub is missing, this is required in the id_token');\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('aud')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning('aud is missing, this is required in the id_token');\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('exp')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning('exp is missing, this is required in the id_token');\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('iat')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning('iat is missing, this is required in the id_token');\r\n        }\r\n\r\n        return validated;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} max_offset_allowed_in_seconds\n * @return {?}\n */\nvalidate_id_token_iat_max_offset(dataIdToken: any, max_offset_allowed_in_seconds: number): boolean {\r\n        if (!dataIdToken.hasOwnProperty('iat')) {\r\n            return false;\r\n        }\r\n\r\n        let /** @type {?} */ dateTime_iat_id_token = new Date(0); // The 0 here is the key, which sets the date to the epoch\r\n        dateTime_iat_id_token.setUTCSeconds(dataIdToken.iat);\r\n\r\n        max_offset_allowed_in_seconds = max_offset_allowed_in_seconds || 0;\r\n\r\n        if (dateTime_iat_id_token == null) {\r\n            return false;\r\n        }\r\n\r\n        this.oidcSecurityCommon.logDebug('validate_id_token_iat_max_offset: ' + (new Date().valueOf() - dateTime_iat_id_token.valueOf()) + ' < ' + (max_offset_allowed_in_seconds * 1000));\r\n        return ((new Date().valueOf() - dateTime_iat_id_token.valueOf()) < (max_offset_allowed_in_seconds * 1000));\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} local_nonce\n * @return {?}\n */\nvalidate_id_token_nonce(dataIdToken: any, local_nonce: any): boolean {\r\n        if (dataIdToken.nonce !== local_nonce) {\r\n            this.oidcSecurityCommon.logDebug('Validate_id_token_nonce failed, dataIdToken.nonce: ' + dataIdToken.nonce + ' local_nonce:' + local_nonce);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} authWellKnownEndpoints_issuer\n * @return {?}\n */\nvalidate_id_token_iss(dataIdToken: any, authWellKnownEndpoints_issuer: any): boolean {\r\n        if (dataIdToken.iss != authWellKnownEndpoints_issuer) {\r\n            this.oidcSecurityCommon.logDebug('Validate_id_token_iss failed, dataIdToken.iss: ' + dataIdToken.iss + ' authWellKnownEndpoints issuer:' + authWellKnownEndpoints_issuer);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} aud\n * @return {?}\n */\nvalidate_id_token_aud(dataIdToken: any, aud: any): boolean {\r\n        if (dataIdToken.aud != aud) {\r\n            this.oidcSecurityCommon.logDebug('Validate_id_token_aud failed, dataIdToken.aud: ' + dataIdToken.aud + ' client_id:' + aud);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} state\n * @param {?} local_state\n * @return {?}\n */\nvalidateStateFromHashCallback(state: any, local_state: any): boolean {\r\n        if (state != local_state) {\r\n            this.oidcSecurityCommon.logDebug('ValidateStateFromHashCallback failed, state: ' + state + ' local_state:' + local_state);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} id_token_sub\n * @param {?} userdata_sub\n * @return {?}\n */\nvalidate_userdata_sub_id_token(id_token_sub: any, userdata_sub: any): boolean {\r\n        if (id_token_sub != userdata_sub) {\r\n            this.oidcSecurityCommon.logDebug('validate_userdata_sub_id_token failed, id_token_sub: ' + id_token_sub + ' userdata_sub:' + userdata_sub);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetPayloadFromToken(token: any, encode: boolean) {\r\n        let /** @type {?} */ data = {};\r\n        if (typeof token !== 'undefined') {\r\n            let /** @type {?} */ encoded = token.split('.')[1];\r\n            if (encode) {\r\n                return encoded;\r\n            }\r\n            data = JSON.parse(this.urlBase64Decode(encoded));\r\n        }\r\n\r\n        return data;\r\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetHeaderFromToken(token: any, encode: boolean) {\r\n        let /** @type {?} */ data = {};\r\n        if (typeof token !== 'undefined') {\r\n            let /** @type {?} */ encoded = token.split('.')[0];\r\n            if (encode) {\r\n                return encoded;\r\n            }\r\n            data = JSON.parse(this.urlBase64Decode(encoded));\r\n        }\r\n\r\n        return data;\r\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetSignatureFromToken(token: any, encode: boolean) {\r\n        let /** @type {?} */ data = {};\r\n        if (typeof token !== 'undefined') {\r\n            let /** @type {?} */ encoded = token.split('.')[2];\r\n            if (encode) {\r\n                return encoded;\r\n            }\r\n            data = JSON.parse(this.urlBase64Decode(encoded));\r\n        }\r\n\r\n        return data;\r\n    }\n/**\n * @param {?} id_token\n * @param {?} jwtkeys\n * @return {?}\n */\nvalidate_signature_id_token(id_token: any, jwtkeys: any): boolean {\r\n\r\n        if (!jwtkeys || !jwtkeys.keys) {\r\n            return false;\r\n        }\r\n\r\n        let /** @type {?} */ header_data = this.getHeaderFromToken(id_token, false);\r\n\r\n\t\tif ((Object.keys(header_data).length === 0 && header_data.constructor === Object)) {\r\n\t\t\tthis.oidcSecurityCommon.logWarning('id token has no header data');\r\n            return false;\r\n\t\t}\r\n\r\n        let /** @type {?} */ kid = header_data.kid;\r\n        let /** @type {?} */ alg = header_data.alg;\r\n\r\n        if ('RS256' != alg) {\r\n            this.oidcSecurityCommon.logWarning('Only RS256 supported');\r\n            return false;\r\n        }\r\n\r\n        let /** @type {?} */ isValid = false;\r\n\r\n        if (!header_data.hasOwnProperty('kid')) {\r\n            // exactly 1 key in the jwtkeys and no kid in the Jose header\r\n            // kty\t\"RSA\" use \"sig\"\r\n            let /** @type {?} */ amountOfMatchingKeys = 0;\r\n            for (let /** @type {?} */ key of jwtkeys.keys) {\r\n                if (key.kty == 'RSA' && key.use == 'sig') {\r\n                    amountOfMatchingKeys = amountOfMatchingKeys + 1;\r\n                }\r\n            }\r\n\r\n            if (amountOfMatchingKeys == 0) {\r\n                this.oidcSecurityCommon.logWarning('no keys found, incorrect Signature, validation failed for id_token');\r\n                return false;\r\n            } else if (amountOfMatchingKeys > 1 ) {\r\n                this.oidcSecurityCommon.logWarning('no ID Token kid claim in JOSE header and multiple supplied in jwks_uri');\r\n                return false;\r\n            } else {\r\n                for (let /** @type {?} */ key of jwtkeys.keys) {\r\n                    if (key.kty == 'RSA' && key.use == 'sig') {\r\n                        let /** @type {?} */ publickey = KEYUTIL.getKey(key);\r\n                        isValid = KJUR.jws.JWS.verify(id_token, publickey, ['RS256']);\r\n                        if (!isValid) {\r\n                            this.oidcSecurityCommon.logWarning('incorrect Signature, validation failed for id_token');\r\n                        }\r\n                        return isValid;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            // kid in the Jose header of id_token\r\n            for (let /** @type {?} */ key of jwtkeys.keys) {\r\n                if (key.kid == kid) {\r\n                    let /** @type {?} */ publickey = KEYUTIL.getKey(key);\r\n                    isValid = KJUR.jws.JWS.verify(id_token, publickey, ['RS256']);\r\n                    if (!isValid) {\r\n                        this.oidcSecurityCommon.logWarning('incorrect Signature, validation failed for id_token');\r\n                    }\r\n                    return isValid;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\n/**\n * @param {?} response_type\n * @return {?}\n */\nconfig_validate_response_type(response_type: string): boolean {\r\n        if (response_type === 'id_token token' || response_type === 'id_token') {\r\n            return true;\r\n        }\r\n\r\n        this.oidcSecurityCommon.logWarning('module configure incorrect, invalid response_type:' + response_type);\r\n        return false;\r\n    }\n/**\n * @param {?} access_token\n * @param {?} at_hash\n * @return {?}\n */\nvalidate_id_token_at_hash(access_token: any, at_hash: any): boolean {\r\n        this.oidcSecurityCommon.logDebug('From the server:' + at_hash);\r\n        let /** @type {?} */ testdata =  this.generate_at_hash('' + access_token);\r\n        this.oidcSecurityCommon.logDebug('client validation not decoded:' + testdata);\r\n        if (testdata == at_hash) {\r\n            return true; // isValid;\r\n        } else {\r\n            let /** @type {?} */ testValue = this.generate_at_hash('' + decodeURIComponent(access_token));\r\n            this.oidcSecurityCommon.logDebug('-gen access--' + testValue);\r\n           if (testValue == at_hash) {\r\n                return true; // isValid\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\n/**\n * @param {?} access_token\n * @return {?}\n */\nprivate generate_at_hash(access_token: any): string {\r\n      let /** @type {?} */ hash = KJUR.crypto.Util.hashString(access_token, 'sha256');\r\n        let /** @type {?} */ first128bits = hash.substr(0, hash.length / 2);\r\n        let /** @type {?} */ testdata = hextob64u(first128bits);\r\n\r\n      return testdata;\r\n    }\n/**\n * @param {?} dataIdToken\n * @return {?}\n */\nprivate getTokenExpirationDate(dataIdToken: any): Date {\r\n        if (!dataIdToken.hasOwnProperty('exp')) {\r\n            return new Date();\r\n        }\r\n\r\n        let /** @type {?} */ date = new Date(0); // The 0 here is the key, which sets the date to the epoch\r\n        date.setUTCSeconds(dataIdToken.exp);\r\n\r\n        return date;\r\n    }\n/**\n * @param {?} str\n * @return {?}\n */\nprivate urlBase64Decode(str: string) {\r\n        let /** @type {?} */ output = str.replace('-', '+').replace('_', '/');\r\n        switch (output.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                output += '==';\r\n                break;\r\n            case 3:\r\n                output += '=';\r\n                break;\r\n            default:\r\n                throw 'Illegal base64url string!';\r\n        }\r\n\r\n        return window.atob(output);\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OidcSecurityCommon, },\n];\n}\n\nfunction OidcSecurityValidation_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityValidation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityValidation.ctorParameters;\n/** @type {?} */\nOidcSecurityValidation.prototype.oidcSecurityCommon;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { AuthConfiguration } from '../modules/auth.configuration';\r\nimport { OidcSecurityStorage } from './oidc.security.storage';\r\n\r\nexport type SilentRenewState = 'running' | '';\nexport class OidcSecurityCommon {\nprivate storage_auth_result = 'authorizationResult';\n/**\n * @return {?}\n */\npublic get authResult(): any {\r\n        return this.retrieve(this.storage_auth_result);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authResult(value: any) {\r\n        this.store(this.storage_auth_result, value);\r\n    }\nprivate storage_access_token = 'authorizationData';\n/**\n * @return {?}\n */\npublic get accessToken(): string {\r\n        return this.retrieve(this.storage_access_token) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set accessToken(value: string) {\r\n        this.store(this.storage_access_token, value);\r\n    }\nprivate storage_id_token = 'authorizationDataIdToken';\n/**\n * @return {?}\n */\npublic get idToken(): string {\r\n        return this.retrieve(this.storage_id_token) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set idToken(value: string) {\r\n        this.store(this.storage_id_token, value);\r\n    }\nprivate storage_is_authorized = '_isAuthorized';\n/**\n * @return {?}\n */\npublic get isAuthorized(): boolean | undefined {\r\n        return this.retrieve(this.storage_is_authorized);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set isAuthorized(value: boolean | undefined) {\r\n        this.store(this.storage_is_authorized, value);\r\n    }\nprivate storage_user_data = 'userData';\n/**\n * @return {?}\n */\npublic get userData(): any {\r\n        return this.retrieve(this.storage_user_data);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set userData(value: any) {\r\n        this.store(this.storage_user_data, value);\r\n    }\nprivate storage_auth_nonce = 'authNonce';\n/**\n * @return {?}\n */\npublic get authNonce(): string {\r\n        return this.retrieve(this.storage_auth_nonce) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authNonce(value: string) {\r\n        this.store(this.storage_auth_nonce, value);\r\n    }\nprivate storage_auth_state_control = 'authStateControl';\n/**\n * @return {?}\n */\npublic get authStateControl(): string {\r\n        return this.retrieve(this.storage_auth_state_control) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authStateControl(value: string) {\r\n        this.store(this.storage_auth_state_control, value);\r\n    }\nprivate storage_well_known_endpoints = 'wellknownendpoints';\n/**\n * @return {?}\n */\npublic get wellKnownEndpoints(): any {\r\n        return this.retrieve(this.storage_well_known_endpoints);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set wellKnownEndpoints(value: any) {\r\n        this.store(this.storage_well_known_endpoints, value);\r\n    }\nprivate storage_session_state = 'session_state';\n/**\n * @return {?}\n */\npublic get sessionState(): any {\r\n        return this.retrieve(this.storage_session_state);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set sessionState(value: any) {\r\n        this.store(this.storage_session_state, value);\r\n    }\nprivate storage_silent_renew_running = 'storage_silent_renew_running';\n/**\n * @return {?}\n */\npublic get silentRenewRunning(): SilentRenewState {\r\n        return this.retrieve(this.storage_silent_renew_running) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set silentRenewRunning(value: SilentRenewState) {\r\n        this.store(this.storage_silent_renew_running, value);\r\n    }\nprivate storage_custom_request_params = 'storage_custom_request_params';\n/**\n * @return {?}\n */\npublic get customRequestParams(): { [key: string]: string | number | boolean } {\r\n        return this.retrieve(this.storage_custom_request_params);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set customRequestParams(value: { [key: string]: string | number | boolean }) {\r\n        this.store(this.storage_custom_request_params, value);\r\n    }\n/**\n * @param {?} authConfiguration\n * @param {?} oidcSecurityStorage\n */\nconstructor(private authConfiguration: AuthConfiguration,\nprivate oidcSecurityStorage: OidcSecurityStorage) {\r\n    }\n/**\n * @return {?}\n */\nsetupModule() { }\n/**\n * @param {?} key\n * @return {?}\n */\nprivate retrieve(key: string): any {\r\n        return this.oidcSecurityStorage.read(key);\r\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nprivate store(key: string, value: any) {\r\n        this.oidcSecurityStorage.write(key, value);\r\n    }\n/**\n * @param {?} isRenewProcess\n * @return {?}\n */\nresetStorageData(isRenewProcess: boolean) {\r\n        if (!isRenewProcess) {\r\n            this.store(this.storage_auth_result, '');\r\n            this.store(this.storage_session_state, '');\r\n            this.store(this.storage_silent_renew_running, '');\r\n            this.store(this.storage_is_authorized, false);\r\n            this.store(this.storage_access_token, '');\r\n            this.store(this.storage_id_token, '');\r\n            this.store(this.storage_user_data, '');\r\n        }\r\n    }\n/**\n * @return {?}\n */\ngetAccessToken(): any {\r\n        return this.retrieve(this.storage_access_token);\r\n    }\n/**\n * @return {?}\n */\ngetIdToken(): any {\r\n        return this.retrieve(this.storage_id_token);\r\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nlogError(message: any) {\r\n        console.error(message);\r\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nlogWarning(message: any) {\r\n        if (this.authConfiguration.log_console_warning_active) {\r\n            console.warn(message);\r\n        }\r\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nlogDebug(message: any) {\r\n        if (this.authConfiguration.log_console_debug_active) {\r\n            console.log(message);\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n{type: OidcSecurityStorage, },\n];\n}\n\nfunction OidcSecurityCommon_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityCommon.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityCommon.ctorParameters;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_result;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_access_token;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_id_token;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_is_authorized;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_user_data;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_nonce;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_state_control;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_well_known_endpoints;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_session_state;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_silent_renew_running;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_custom_request_params;\n/** @type {?} */\nOidcSecurityCommon.prototype.authConfiguration;\n/** @type {?} */\nOidcSecurityCommon.prototype.oidcSecurityStorage;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { AuthConfiguration } from '../modules/auth.configuration';\n/**\n * Implement this class-interface to create a custom storage.\n * @abstract\n */\nexport abstract class OidcSecurityStorage {\n/**\n * This method must contain the logic to read the storage.\n * @abstract\n * @param {?} key\n * @return {?} The value of the given key\n */\nread(key: string) {}\n/**\n * This method must contain the logic to write the storage.\n * @abstract\n * @param {?} key\n * @param {?} value The value for the given key\n * @return {?}\n */\nwrite(key: string, value: any) {}\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction OidcSecurityStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityStorage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityStorage.ctorParameters;\n}\n\nexport class BrowserStorage implements OidcSecurityStorage {\nprivate hasStorage: boolean;\n/**\n * @param {?} authConfiguration\n */\nconstructor(private authConfiguration: AuthConfiguration) {\n        this.hasStorage = typeof Storage !== 'undefined';\n    }\n/**\n * @param {?} key\n * @return {?}\n */\npublic read(key: string): any {\n        if (this.hasStorage) {\n            return JSON.parse(this.authConfiguration.storage.getItem(key));\n        }\n\n        return;\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\npublic write(key: string, value: any): void {\n        if (this.hasStorage) {\n            value = value === undefined ? null : value;\n            this.authConfiguration.storage.setItem(key, JSON.stringify(value));\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n];\n}\n\nfunction BrowserStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserStorage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserStorage.ctorParameters;\n/** @type {?} */\nBrowserStorage.prototype.hasStorage;\n/** @type {?} */\nBrowserStorage.prototype.authConfiguration;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class DefaultConfiguration {\r\n    stsServer = 'https://localhost:44318';\r\n    redirect_url = 'https://localhost:44311';\r\n    // The Client MUST validate that the aud (audience) Claim contains its client_id value registered at the Issuer identified by the iss (issuer) Claim as an audience.\r\n    // The ID Token MUST be rejected if the ID Token does not list the Client as a valid audience, or if it contains additional audiences not trusted by the Client.\r\n    client_id = 'angularclient';\r\n    response_type = 'id_token token';\r\n    // For some oidc, we require resource identifier to be provided along with the request.\r\n    resource = '';\r\n    scope = 'openid email profile';\r\n    // Only for Google Auth with particular G Suite domain, see https://developers.google.com/identity/protocols/OpenIDConnect#hd-param\r\n    hd_param = '';\r\n    post_logout_redirect_uri = 'https://localhost:44311/unauthorized';\r\n    start_checksession = false;\r\n    silent_renew = true;\r\n    silent_renew_offset_in_seconds = 0;\r\n    post_login_route = '/';\r\n    // HTTP 403\r\n    forbidden_route = '/forbidden';\r\n    // HTTP 401\r\n    unauthorized_route = '/unauthorized';\r\n    auto_userinfo = true;\r\n\tauto_clean_state_after_authentication: true;\r\n\ttrigger_authorization_result_event: false;\r\n    log_console_warning_active = true;\r\n    log_console_debug_active = false;\r\n\r\n\r\n    // id_token C8: The iat Claim can be used to reject tokens that were issued too far away from the current time,\r\n    // limiting the amount of time that nonces need to be stored to prevent attacks.The acceptable range is Client specific.\r\n    max_id_token_iat_offset_allowed_in_seconds = 3;\r\n    override_well_known_configuration = false;\r\n    override_well_known_configuration_url = 'https://localhost:44386/wellknownconfiguration.json';\r\n\r\n    storage = typeof Storage !== 'undefined' ? sessionStorage : null;\r\n}\n\nfunction DefaultConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultConfiguration.prototype.stsServer;\n/** @type {?} */\nDefaultConfiguration.prototype.redirect_url;\n/** @type {?} */\nDefaultConfiguration.prototype.client_id;\n/** @type {?} */\nDefaultConfiguration.prototype.response_type;\n/** @type {?} */\nDefaultConfiguration.prototype.resource;\n/** @type {?} */\nDefaultConfiguration.prototype.scope;\n/** @type {?} */\nDefaultConfiguration.prototype.hd_param;\n/** @type {?} */\nDefaultConfiguration.prototype.post_logout_redirect_uri;\n/** @type {?} */\nDefaultConfiguration.prototype.start_checksession;\n/** @type {?} */\nDefaultConfiguration.prototype.silent_renew;\n/** @type {?} */\nDefaultConfiguration.prototype.silent_renew_offset_in_seconds;\n/** @type {?} */\nDefaultConfiguration.prototype.post_login_route;\n/** @type {?} */\nDefaultConfiguration.prototype.forbidden_route;\n/** @type {?} */\nDefaultConfiguration.prototype.unauthorized_route;\n/** @type {?} */\nDefaultConfiguration.prototype.auto_userinfo;\n/** @type {?} */\nDefaultConfiguration.prototype.auto_clean_state_after_authentication;\n/** @type {?} */\nDefaultConfiguration.prototype.trigger_authorization_result_event;\n/** @type {?} */\nDefaultConfiguration.prototype.log_console_warning_active;\n/** @type {?} */\nDefaultConfiguration.prototype.log_console_debug_active;\n/** @type {?} */\nDefaultConfiguration.prototype.max_id_token_iat_offset_allowed_in_seconds;\n/** @type {?} */\nDefaultConfiguration.prototype.override_well_known_configuration;\n/** @type {?} */\nDefaultConfiguration.prototype.override_well_known_configuration_url;\n/** @type {?} */\nDefaultConfiguration.prototype.storage;\n}\n\nexport class OpenIDImplicitFlowConfiguration {\r\n\r\n    stsServer: string;\r\n    redirect_url: string;\r\n    client_id: string;\r\n    response_type: string;\r\n    resource: string;\r\n    scope: string;\r\n    hd_param: string;\r\n    post_logout_redirect_uri: string;\r\n    start_checksession: boolean;\r\n    silent_renew: boolean;\r\n    silent_renew_offset_in_seconds: number;\r\n    post_login_route: string;\r\n    forbidden_route: string;\r\n    unauthorized_route: string;\r\n    auto_userinfo: boolean;\r\n\tauto_clean_state_after_authentication: boolean;\r\n\ttrigger_authorization_result_event: boolean;\r\n    log_console_warning_active: boolean;\r\n    log_console_debug_active: boolean;\r\n    max_id_token_iat_offset_allowed_in_seconds: number;\r\n    override_well_known_configuration: boolean;\r\n    override_well_known_configuration_url: string;\r\n    storage: any;\r\n}\n\nfunction OpenIDImplicitFlowConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.stsServer;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.redirect_url;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.client_id;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.response_type;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.resource;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.scope;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.hd_param;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.post_logout_redirect_uri;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.start_checksession;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.silent_renew;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.silent_renew_offset_in_seconds;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.post_login_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.forbidden_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.unauthorized_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.auto_userinfo;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.auto_clean_state_after_authentication;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.trigger_authorization_result_event;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.log_console_warning_active;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.log_console_debug_active;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.max_id_token_iat_offset_allowed_in_seconds;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.override_well_known_configuration;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.override_well_known_configuration_url;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.storage;\n}\n\nexport class AuthConfiguration {\nprivate openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration;\n/**\n * @return {?}\n */\nget stsServer(): string {\r\n        return this.openIDImplicitFlowConfiguration.stsServer || this.defaultConfig.stsServer;\r\n    }\n/**\n * @return {?}\n */\nget redirect_url(): string {\r\n        return this.openIDImplicitFlowConfiguration.redirect_url || this.defaultConfig.redirect_url;\r\n    }\n/**\n * @return {?}\n */\nget client_id(): string {\r\n        return this.openIDImplicitFlowConfiguration.client_id || this.defaultConfig.client_id;\r\n    }\n/**\n * @return {?}\n */\nget response_type(): string {\r\n        return this.openIDImplicitFlowConfiguration.response_type || this.defaultConfig.response_type;\r\n    }\n/**\n * @return {?}\n */\nget resource(): string {\r\n        return this.openIDImplicitFlowConfiguration.resource || this.defaultConfig.resource;\r\n    }\n/**\n * @return {?}\n */\nget scope(): string {\r\n        return this.openIDImplicitFlowConfiguration.scope || this.defaultConfig.scope;\r\n    }\n/**\n * @return {?}\n */\nget hd_param(): string {\r\n      return this.openIDImplicitFlowConfiguration.hd_param || this.defaultConfig.hd_param;\r\n    }\n/**\n * @return {?}\n */\nget post_logout_redirect_uri(): string {\r\n        return this.openIDImplicitFlowConfiguration.post_logout_redirect_uri || this.defaultConfig.post_logout_redirect_uri;\r\n    }\n/**\n * @return {?}\n */\nget start_checksession(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.start_checksession !== undefined ? this.openIDImplicitFlowConfiguration.start_checksession : this.defaultConfig.start_checksession;\r\n    }\n/**\n * @return {?}\n */\nget silent_renew(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.silent_renew !== undefined ? this.openIDImplicitFlowConfiguration.silent_renew : this.defaultConfig.silent_renew;\r\n    }\n/**\n * @return {?}\n */\nget silent_renew_offset_in_seconds(): number {\r\n        return this.openIDImplicitFlowConfiguration.silent_renew_offset_in_seconds || this.defaultConfig.silent_renew_offset_in_seconds;\r\n    }\n/**\n * @return {?}\n */\nget post_login_route(): string {\r\n        return this.openIDImplicitFlowConfiguration.post_login_route || this.defaultConfig.post_login_route;\r\n    }\n/**\n * @return {?}\n */\nget forbidden_route(): string {\r\n        return this.openIDImplicitFlowConfiguration.forbidden_route || this.defaultConfig.forbidden_route;\r\n    }\n/**\n * @return {?}\n */\nget unauthorized_route(): string {\r\n        return this.openIDImplicitFlowConfiguration.unauthorized_route || this.defaultConfig.unauthorized_route;\r\n    }\n/**\n * @return {?}\n */\nget auto_userinfo(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.auto_userinfo !== undefined ? this.openIDImplicitFlowConfiguration.auto_userinfo : this.defaultConfig.auto_userinfo;\r\n    }\n/**\n * @return {?}\n */\nget auto_clean_state_after_authentication(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.auto_clean_state_after_authentication !== undefined ? this.openIDImplicitFlowConfiguration.auto_clean_state_after_authentication : this.defaultConfig.auto_clean_state_after_authentication;\r\n\t}\n/**\n * @return {?}\n */\nget trigger_authorization_result_event(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.trigger_authorization_result_event !== undefined ? this.openIDImplicitFlowConfiguration.trigger_authorization_result_event : this.defaultConfig.trigger_authorization_result_event;\r\n    }\n/**\n * @return {?}\n */\nget log_console_warning_active(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.log_console_warning_active !== undefined ? this.openIDImplicitFlowConfiguration.log_console_warning_active : this.defaultConfig.log_console_warning_active;\r\n    }\n/**\n * @return {?}\n */\nget log_console_debug_active(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.log_console_debug_active !== undefined ? this.openIDImplicitFlowConfiguration.log_console_debug_active : this.defaultConfig.log_console_debug_active;\r\n    }\n/**\n * @return {?}\n */\nget max_id_token_iat_offset_allowed_in_seconds(): number {\r\n        return this.openIDImplicitFlowConfiguration.max_id_token_iat_offset_allowed_in_seconds || this.defaultConfig.max_id_token_iat_offset_allowed_in_seconds;\r\n    }\n/**\n * @return {?}\n */\nget override_well_known_configuration(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.override_well_known_configuration !== undefined ? this.openIDImplicitFlowConfiguration.override_well_known_configuration : this.defaultConfig.override_well_known_configuration;\r\n    }\n/**\n * @return {?}\n */\nget override_well_known_configuration_url(): string {\r\n        return this.openIDImplicitFlowConfiguration.override_well_known_configuration_url || this.defaultConfig.override_well_known_configuration_url;\r\n    }\n/**\n * @return {?}\n */\nget storage(): any {\r\n        return this.openIDImplicitFlowConfiguration.storage || this.defaultConfig.storage;\r\n    }\n/**\n * @param {?} defaultConfig\n */\nconstructor(private defaultConfig: DefaultConfiguration) { }\n/**\n * @param {?} openIDImplicitFlowConfiguration\n * @return {?}\n */\ninit(openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration) {\r\n        this.openIDImplicitFlowConfiguration = openIDImplicitFlowConfiguration;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DefaultConfiguration, },\n];\n}\n\nfunction AuthConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthConfiguration.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthConfiguration.ctorParameters;\n/** @type {?} */\nAuthConfiguration.prototype.openIDImplicitFlowConfiguration;\n/** @type {?} */\nAuthConfiguration.prototype.defaultConfig;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgModule","Output","Router","HttpClient","Inject","PLATFORM_ID","Injectable","Observable","HttpParams","isPlatformBrowser","BehaviorSubject","EventEmitter","HttpHeaders","hextob64u","KJUR","KEYUTIL"],"mappings":"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"}