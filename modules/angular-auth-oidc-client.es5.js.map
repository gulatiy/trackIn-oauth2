{"version":3,"file":"angular-auth-oidc-client.es5.js","sources":["../../index.ts","../../public_api.ts","../../src/angular-auth-oidc-client.ts","../../src/modules/auth.module.ts","../../src/services/oidc.security.service.ts","../../src/services/uri-encoder.ts","../../src/services/authorization-result.enum.ts","../../src/services/oidc.security.user-service.ts","../../src/services/oidc.security.silent-renew.ts","../../src/services/oidc.security.check-session.ts","../../src/services/auth.well-known-endpoints.ts","../../src/services/oidc.security.validation.ts","../../src/services/oidc.security.common.ts","../../src/services/oidc.security.storage.ts","../../src/modules/auth.configuration.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {OidcSecurityService,OidcSecurityValidation,OidcSecurityCheckSession,OidcSecuritySilentRenew,OidcSecurityUserService,OidcSecurityCommon,OidcSecurityStorage,BrowserStorage,AuthWellKnownEndpoints,AuthorizationResult,AuthConfiguration,OpenIDImplicitFlowConfiguration,DefaultConfiguration,AuthModule} from './public_api';\n","/**\n * Angular OpenID Connect Implicit Flow.\n * OpenID Connect Implicit Flow RP Client\n * Written by Damien Bowden.\n * MIT license.\n * https://github.com/damienbod/angular-auth-oidc-client\n */\n\nexport {OidcSecurityService,OidcSecurityValidation,OidcSecurityCheckSession,OidcSecuritySilentRenew,OidcSecurityUserService,OidcSecurityCommon,OidcSecurityStorage,BrowserStorage,AuthWellKnownEndpoints,AuthorizationResult,AuthConfiguration,OpenIDImplicitFlowConfiguration,DefaultConfiguration,AuthModule} from './src/angular-auth-oidc-client';\n","// Public classes.\nexport { OidcSecurityService } from './services/oidc.security.service';\nexport { OidcSecurityValidation } from './services/oidc.security.validation';\nexport { OidcSecurityCheckSession } from './services/oidc.security.check-session';\nexport { OidcSecuritySilentRenew } from './services/oidc.security.silent-renew';\nexport { OidcSecurityUserService } from './services/oidc.security.user-service';\nexport { OidcSecurityCommon } from './services/oidc.security.common';\nexport { OidcSecurityStorage, BrowserStorage } from './services/oidc.security.storage';\nexport { AuthWellKnownEndpoints } from './services/auth.well-known-endpoints';\nexport { AuthorizationResult } from './services/authorization-result.enum';\n\nexport { AuthConfiguration, OpenIDImplicitFlowConfiguration, DefaultConfiguration } from './modules/auth.configuration';\nexport { AuthModule } from './modules/auth.module';\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { OidcSecurityService } from '../services/oidc.security.service';\nimport { AuthConfiguration, DefaultConfiguration } from './auth.configuration';\nimport { OidcSecurityValidation } from '../services/oidc.security.validation';\nimport { OidcSecurityCheckSession } from '../services/oidc.security.check-session';\nimport { OidcSecuritySilentRenew } from '../services/oidc.security.silent-renew';\nimport { OidcSecurityUserService } from '../services/oidc.security.user-service';\nimport { OidcSecurityCommon } from '../services/oidc.security.common';\nimport { OidcSecurityStorage, BrowserStorage } from '../services/oidc.security.storage';\nimport { AuthWellKnownEndpoints } from '../services/auth.well-known-endpoints';\nexport class AuthModule {\n/**\n * @param {?=} token\n * @return {?}\n */\nstatic forRoot(token: Token = {}): ModuleWithProviders {\n        return {\n            ngModule: AuthModule,\n            providers: [\n                OidcSecurityService,\n                OidcSecurityValidation,\n                OidcSecurityCheckSession,\n                OidcSecuritySilentRenew,\n                OidcSecurityUserService,\n                OidcSecurityCommon,\n                AuthConfiguration,\n                DefaultConfiguration,\n                AuthWellKnownEndpoints,\n                {\n                    provide: OidcSecurityStorage,\n                    useClass: token.storage || BrowserStorage\n                }\n            ]\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AuthModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthModule.ctorParameters;\n}\n\n\nexport interface Type<T> extends Function {\n\n    new (...args: any[]): T;\n\n}\n\nexport interface Token {\n\n    storage?: Type<any>;\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { PLATFORM_ID, Inject } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { Injectable, EventEmitter, Output } from '@angular/core';\r\nimport'rxjs/add/operator/map';\r\nimport'rxjs/add/operator/catch';\r\nimport'rxjs/add/operator/timeInterval';\r\nimport'rxjs/add/operator/pluck';\r\nimport'rxjs/add/operator/take';\r\nimport'rxjs/add/observable/interval';\r\nimport'rxjs/add/observable/timer';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Router } from '@angular/router';\r\nimport { AuthConfiguration, OpenIDImplicitFlowConfiguration } from '../modules/auth.configuration';\r\nimport { OidcSecurityValidation } from './oidc.security.validation';\r\nimport { OidcSecurityCheckSession } from './oidc.security.check-session';\r\nimport { OidcSecuritySilentRenew } from './oidc.security.silent-renew';\r\nimport { OidcSecurityUserService } from './oidc.security.user-service';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { AuthWellKnownEndpoints } from './auth.well-known-endpoints';\r\nimport { JwtKeys } from './jwtkeys';\r\nimport { AuthorizationResult } from './authorization-result.enum';\r\nimport { UriEncoder } from './uri-encoder';\nexport class OidcSecurityService {\r\n\r\n     onModuleSetup: EventEmitter<any> = new EventEmitter<any>(true);\r\n     onAuthorizationResult: EventEmitter<AuthorizationResult> = new EventEmitter<AuthorizationResult>(true);\r\n\r\n    checkSessionChanged: boolean;\r\n    moduleSetup = false;\nprivate _isAuthorized = new BehaviorSubject<boolean>(false);\nprivate _isAuthorizedValue: boolean;\nprivate lastUserData: any = undefined;\nprivate _userData = new BehaviorSubject<any>('');\nprivate oidcSecurityValidation: OidcSecurityValidation;\nprivate jwtKeys: JwtKeys;\nprivate authWellKnownEndpointsLoaded = false;\nprivate runTokenValidationRunning: boolean;\n/**\n * @param {?} platformId\n * @param {?} http\n * @param {?} authConfiguration\n * @param {?} router\n * @param {?} oidcSecurityCheckSession\n * @param {?} oidcSecuritySilentRenew\n * @param {?} oidcSecurityUserService\n * @param {?} oidcSecurityCommon\n * @param {?} authWellKnownEndpoints\n */\nconstructor(\nprivate platformId: Object,\nprivate http: HttpClient,\nprivate authConfiguration: AuthConfiguration,\nprivate router: Router,\nprivate oidcSecurityCheckSession: OidcSecurityCheckSession,\nprivate oidcSecuritySilentRenew: OidcSecuritySilentRenew,\nprivate oidcSecurityUserService: OidcSecurityUserService,\nprivate oidcSecurityCommon: OidcSecurityCommon,\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints\r\n    ) {\r\n    }\n/**\n * @param {?} openIDImplicitFlowConfiguration\n * @return {?}\n */\nsetupModule(openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration): void {\r\n\r\n        this.authConfiguration.init(openIDImplicitFlowConfiguration);\r\n        this.oidcSecurityValidation = new OidcSecurityValidation(this.oidcSecurityCommon);\r\n\r\n        this.oidcSecurityCheckSession.onCheckSessionChanged.subscribe(() => { this.onCheckSessionChanged(); });\r\n        this.authWellKnownEndpoints.onWellKnownEndpointsLoaded.subscribe(() => { this.onWellKnownEndpointsLoaded(); });\r\n        this._userData.subscribe(() => { this.onUserDataChanged(); });\r\n\r\n        this.oidcSecurityCommon.setupModule();\r\n\r\n        const /** @type {?} */ userData = this.oidcSecurityCommon.userData;\r\n        if (userData !== '') {\r\n            this.setUserData(userData);\r\n        }\r\n\r\n        const /** @type {?} */ isAuthorized = this.oidcSecurityCommon.isAuthorized;\r\n        if (isAuthorized !== undefined) {\r\n            this.setIsAuthorized(isAuthorized);\r\n\r\n            // Start the silent renew\r\n            this.runTokenValidation();\r\n        }\r\n\r\n        this.oidcSecurityCommon.logDebug('STS server: ' + this.authConfiguration.stsServer);\r\n\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            // Client only code.\r\n            this.authWellKnownEndpoints.onWellKnownEndpointsLoaded.subscribe(() => {\r\n                this.moduleSetup = true;\r\n                this.onModuleSetup.emit();\r\n\r\n                if (this.authConfiguration.silent_renew) {\r\n                    this.oidcSecuritySilentRenew.initRenew();\r\n                }\r\n\r\n                if (this.authConfiguration.start_checksession) {\r\n                    this.oidcSecurityCheckSession.init().subscribe(() => {\r\n                        this.oidcSecurityCheckSession.pollServerSession(this.authConfiguration.client_id);\r\n                    });\r\n                }\r\n            });\r\n\r\n            this.authWellKnownEndpoints.setupModule();\r\n        } else {\r\n            this.moduleSetup = true;\r\n            this.onModuleSetup.emit();\r\n        }\r\n    }\n/**\n * @return {?}\n */\ngetUserData(): Observable<any> {\r\n        return this._userData.asObservable();\r\n    }\n/**\n * @param {?} userData\n * @return {?}\n */\nprivate setUserData(userData: any): void {\r\n        this.oidcSecurityCommon.userData = userData;\r\n        this._userData.next(userData);\r\n    }\n/**\n * @return {?}\n */\ngetIsAuthorized(): Observable<boolean> {\r\n        return this._isAuthorized.asObservable();\r\n    }\n/**\n * @param {?} isAuthorized\n * @return {?}\n */\nprivate setIsAuthorized(isAuthorized: boolean): void {\r\n        this._isAuthorizedValue = isAuthorized;\r\n        this._isAuthorized.next(isAuthorized);\r\n    }\n/**\n * @return {?}\n */\ngetToken(): any {\r\n        if (!this._isAuthorizedValue) {\r\n            return '';\r\n        }\r\n\r\n        let /** @type {?} */ token = this.oidcSecurityCommon.getAccessToken();\r\n        return decodeURIComponent(token);\r\n    }\n/**\n * @return {?}\n */\ngetIdToken(): any {\r\n        if (!this._isAuthorizedValue) {\r\n            return '';\r\n        }\r\n\r\n        let /** @type {?} */ token = this.oidcSecurityCommon.getIdToken();\r\n        return decodeURIComponent(token);\r\n    }\n/**\n * @param {?=} encode\n * @return {?}\n */\ngetPayloadFromIdToken(encode = false): any {\r\n        const /** @type {?} */ token = this.getIdToken();\r\n        return this.oidcSecurityValidation.getPayloadFromToken(token, encode);\r\n    }\n/**\n * @param {?} state\n * @return {?}\n */\nsetState(state: string): void {\r\n        this.oidcSecurityCommon.authStateControl = state;\r\n    }\n/**\n * @return {?}\n */\ngetState(): string {\r\n        return this.oidcSecurityCommon.authStateControl;\r\n    }\n/**\n * @param {?} params\n * @return {?}\n */\nsetCustomRequestParameters(params: { [key: string]: string | number | boolean }) {\r\n        this.oidcSecurityCommon.customRequestParams = params;\r\n    }\n/**\n * @return {?}\n */\nauthorize() {\r\n\r\n        let /** @type {?} */ data = this.oidcSecurityCommon.wellKnownEndpoints;\r\n        if (data && data !== '') {\r\n            this.authWellKnownEndpointsLoaded = true;\r\n        }\r\n\r\n        if (!this.authWellKnownEndpointsLoaded) {\r\n            this.oidcSecurityCommon.logError('Well known endpoints must be loaded before user can login!')\r\n            return;\r\n        }\r\n\r\n        if (!this.oidcSecurityValidation.config_validate_response_type(this.authConfiguration.response_type)) {\r\n            // invalid response_type\r\n            return;\r\n        }\r\n\r\n        this.resetAuthorizationData(false);\r\n\r\n        this.oidcSecurityCommon.logDebug('BEGIN Authorize, no auth data');\r\n\r\n        let /** @type {?} */ state = this.oidcSecurityCommon.authStateControl;\r\n        if (state === '' || state === null) {\r\n            state = Date.now() + '' + Math.random();\r\n            this.oidcSecurityCommon.authStateControl = state;\r\n        }\r\n\r\n        let /** @type {?} */ nonce = 'N' + Math.random() + '' + Date.now();\r\n        this.oidcSecurityCommon.authNonce = nonce;\r\n        this.oidcSecurityCommon.logDebug('AuthorizedController created. local state: ' + this.oidcSecurityCommon.authStateControl);\r\n\r\n        let /** @type {?} */ url = this.createAuthorizeUrl(nonce, state, this.authWellKnownEndpoints.authorization_endpoint);\r\n        window.location.href = url;\r\n    }\n/**\n * @param {?=} hash\n * @return {?}\n */\nauthorizedCallback(hash?: string) {\r\n        let /** @type {?} */ silentRenew = this.oidcSecurityCommon.silentRenewRunning;\r\n        let /** @type {?} */ isRenewProcess = (silentRenew === 'running');\r\n\r\n        this.oidcSecurityCommon.logDebug('BEGIN authorizedCallback, no auth data');\r\n        this.resetAuthorizationData(isRenewProcess);\r\n\r\n        hash = hash || window.location.hash.substr(1);\r\n\r\n        let /** @type {?} */ result: any = hash.split('&').reduce(function (result: any, item: string) {\r\n            let /** @type {?} */ parts = item.split('=');\r\n            result[parts[0]] = parts[1];\r\n            return result;\r\n        }, {});\r\n        this.oidcSecurityCommon.authResult = result;\r\n\r\n        this.oidcSecurityCommon.logDebug(result);\r\n        this.oidcSecurityCommon.logDebug('authorizedCallback created, begin token validation');\r\n\r\n        let /** @type {?} */ access_token = '';\r\n        let /** @type {?} */ id_token = '';\r\n        let /** @type {?} */ authResponseIsValid = false;\r\n        let /** @type {?} */ decoded_id_token: any;\r\n\r\n        this.getSigningKeys()\r\n            .subscribe(jwtKeys => {\r\n                this.jwtKeys = jwtKeys;\r\n\r\n                if (!result.error) {\r\n\r\n                    // validate state\r\n                    if (this.oidcSecurityValidation.validateStateFromHashCallback(result.state, this.oidcSecurityCommon.authStateControl)) {\r\n                        if (this.authConfiguration.response_type === 'id_token token') {\r\n                            access_token = result.access_token;\r\n                        }\r\n                        id_token = result.id_token;\r\n\r\n                        decoded_id_token = this.oidcSecurityValidation.getPayloadFromToken(id_token, false);\r\n\r\n                        // validate jwt signature\r\n                        if (this.oidcSecurityValidation.validate_signature_id_token(id_token, this.jwtKeys)) {\r\n                            // validate nonce\r\n                            if (this.oidcSecurityValidation.validate_id_token_nonce(decoded_id_token, this.oidcSecurityCommon.authNonce)) {\r\n                                // validate required fields id_token\r\n                                if (this.oidcSecurityValidation.validate_required_id_token(decoded_id_token)) {\r\n                                    // validate max offset from the id_token issue to now\r\n                                    if (this.oidcSecurityValidation.validate_id_token_iat_max_offset(decoded_id_token, this.authConfiguration.max_id_token_iat_offset_allowed_in_seconds)) {\r\n                                        // validate iss\r\n                                        if (this.oidcSecurityValidation.validate_id_token_iss(decoded_id_token, this.authWellKnownEndpoints.issuer)) {\r\n                                            // validate aud\r\n                                            if (this.oidcSecurityValidation.validate_id_token_aud(decoded_id_token, this.authConfiguration.client_id)) {\r\n                                                // validate_id_token_exp_not_expired\r\n                                                if (this.oidcSecurityValidation.validate_id_token_exp_not_expired(decoded_id_token)) {\r\n                                                    // flow id_token token\r\n                                                    if (this.authConfiguration.response_type === 'id_token token') {\r\n                                                        // valiadate at_hash and access_token\r\n                                                        if (this.oidcSecurityValidation.validate_id_token_at_hash(access_token, decoded_id_token.at_hash) || !access_token) {\r\n                                                            authResponseIsValid = true;\r\n                                                            this.successful_validation();\r\n                                                        } else {\r\n                                                            this.oidcSecurityCommon.logWarning('authorizedCallback incorrect at_hash');\r\n                                                        }\r\n                                                    } else {\r\n                                                        authResponseIsValid = true;\r\n                                                        this.successful_validation();\r\n                                                    }\r\n                                                } else {\r\n                                                    this.oidcSecurityCommon.logWarning('authorizedCallback token expired');\r\n                                                }\r\n                                            } else {\r\n                                                this.oidcSecurityCommon.logWarning('authorizedCallback incorrect aud');\r\n                                            }\r\n                                        } else {\r\n                                            this.oidcSecurityCommon.logWarning('authorizedCallback incorrect iss does not match authWellKnownEndpoints issuer');\r\n                                        }\r\n                                    } else {\r\n                                        this.oidcSecurityCommon.logWarning('authorizedCallback Validation, iat rejected id_token was issued too far away from the current time');\r\n                                    }\r\n                                } else {\r\n                                    this.oidcSecurityCommon.logDebug('authorizedCallback Validation, one of the REQUIRED properties missing from id_token');\r\n                                }\r\n                            } else {\r\n                                this.oidcSecurityCommon.logWarning('authorizedCallback incorrect nonce');\r\n                            }\r\n                        } else {\r\n                            this.oidcSecurityCommon.logDebug('authorizedCallback Signature validation failed id_token');\r\n                        }\r\n                    } else {\r\n                        this.oidcSecurityCommon.logWarning('authorizedCallback incorrect state');\r\n                    }\r\n                }\r\n\r\n                this.oidcSecurityCommon.silentRenewRunning = '';\r\n\r\n                if (authResponseIsValid) {\r\n                    this.setAuthorizationData(access_token, id_token);\r\n                    if (this.authConfiguration.auto_userinfo) {\r\n                        this.getUserinfo(isRenewProcess, result, id_token, decoded_id_token).subscribe((response) => {\r\n                            if (response) {\r\n                                if (this.authConfiguration.trigger_authorization_result_event) {\r\n                                    this.onAuthorizationResult.emit(AuthorizationResult.authorized);\r\n                                } else {\r\n                                    this.router.navigate([this.authConfiguration.post_login_route]);\r\n                                }\r\n                            } else {\r\n                                if (this.authConfiguration.trigger_authorization_result_event) {\r\n                                    this.onAuthorizationResult.emit(AuthorizationResult.unauthorized);\r\n                                } else {\r\n                                    this.router.navigate([this.authConfiguration.unauthorized_route]);\r\n                                }\r\n                            }\r\n                        });\r\n                    } else {\r\n                        this.runTokenValidation();\r\n                        if (this.authConfiguration.trigger_authorization_result_event) {\r\n                            this.onAuthorizationResult.emit(AuthorizationResult.authorized);\r\n                        } else {\r\n                            this.router.navigate([this.authConfiguration.post_login_route]);\r\n                        }\r\n                    }\r\n                } else { // something went wrong\r\n                    this.oidcSecurityCommon.logDebug('authorizedCallback, token(s) validation failed, resetting');\r\n                    this.resetAuthorizationData(false);\r\n                    if (this.authConfiguration.trigger_authorization_result_event) {\r\n                        this.onAuthorizationResult.emit(AuthorizationResult.unauthorized);\r\n                    } else {\r\n                        this.router.navigate([this.authConfiguration.unauthorized_route]);\r\n                    }\r\n                }\r\n            });\r\n    }\n/**\n * @param {?=} isRenewProcess\n * @param {?=} result\n * @param {?=} id_token\n * @param {?=} decoded_id_token\n * @return {?}\n */\ngetUserinfo(isRenewProcess = false, result?: any, id_token?: any, decoded_id_token?: any): Observable<boolean> {\r\n        result = result ? result : this.oidcSecurityCommon.authResult;\r\n        id_token = id_token ? id_token : this.oidcSecurityCommon.idToken;\r\n        decoded_id_token = decoded_id_token ? decoded_id_token : this.oidcSecurityValidation.getPayloadFromToken(id_token, false);\r\n\r\n        return new Observable<boolean>(observer => {\r\n            // flow id_token token\r\n            if (this.authConfiguration.response_type === 'id_token token') {\r\n                if (isRenewProcess) {\r\n                    this.oidcSecurityCommon.sessionState = result.session_state;\r\n                    observer.next(true);\r\n                    observer.complete();\r\n                } else {\r\n                    this.oidcSecurityUserService.initUserData()\r\n                        .subscribe(() => {\r\n                            this.oidcSecurityCommon.logDebug('authorizedCallback id_token token flow');\r\n                            if (this.oidcSecurityValidation.validate_userdata_sub_id_token(decoded_id_token.sub, this.oidcSecurityUserService.userData.sub)) {\r\n                                this.setUserData(this.oidcSecurityUserService.userData);\r\n                                this.oidcSecurityCommon.logDebug(this.oidcSecurityCommon.accessToken);\r\n                                this.oidcSecurityCommon.logDebug(this.oidcSecurityUserService.userData);\r\n\r\n                                this.oidcSecurityCommon.sessionState = result.session_state;\r\n\r\n                                this.runTokenValidation();\r\n                                observer.next(true);\r\n                            } else { // something went wrong, userdata sub does not match that from id_token\r\n                                this.oidcSecurityCommon.logWarning('authorizedCallback, User data sub does not match sub in id_token');\r\n                                this.oidcSecurityCommon.logDebug('authorizedCallback, token(s) validation failed, resetting');\r\n                                this.resetAuthorizationData(false);\r\n                                observer.next(false);\r\n                            }\r\n                            observer.complete();\r\n                        });\r\n                }\r\n            } else { // flow id_token\r\n                this.oidcSecurityCommon.logDebug('authorizedCallback id_token flow');\r\n                this.oidcSecurityCommon.logDebug(this.oidcSecurityCommon.accessToken);\r\n\r\n                // userData is set to the id_token decoded. No access_token.\r\n                this.oidcSecurityUserService.userData = decoded_id_token;\r\n                this.setUserData(this.oidcSecurityUserService.userData);\r\n\r\n                this.oidcSecurityCommon.sessionState = result.session_state;\r\n\r\n                if (!isRenewProcess) {\r\n                    this.runTokenValidation();\r\n                }\r\n\r\n                observer.next(true);\r\n                observer.complete();\r\n            }\r\n        });\r\n    }\n/**\n * @return {?}\n */\nlogoff() {\r\n        // /connect/endsession?id_token_hint=...&post_logout_redirect_uri=https://myapp.com\r\n        this.oidcSecurityCommon.logDebug('BEGIN Authorize, no auth data');\r\n\r\n        if (this.authWellKnownEndpoints.end_session_endpoint) {\r\n            let /** @type {?} */ end_session_endpoint = this.authWellKnownEndpoints.end_session_endpoint;\r\n            let /** @type {?} */ id_token_hint = this.oidcSecurityCommon.idToken;\r\n            let /** @type {?} */ url = this.createEndSessionUrl(end_session_endpoint, id_token_hint);\r\n\r\n            this.resetAuthorizationData(false);\r\n\r\n            if (this.authConfiguration.start_checksession && this.checkSessionChanged) {\r\n                this.oidcSecurityCommon.logDebug('only local login cleaned up, server session has changed');\r\n            } else {\r\n                window.location.href = url;\r\n            }\r\n        } else {\r\n            this.resetAuthorizationData(false);\r\n            this.oidcSecurityCommon.logDebug('only local login cleaned up, no end_session_endpoint');\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprivate successful_validation() {\r\n        this.oidcSecurityCommon.authNonce = '';\r\n\r\n        if (this.authConfiguration.auto_clean_state_after_authentication) {\r\n            this.oidcSecurityCommon.authStateControl = '';\r\n        }\r\n        this.oidcSecurityCommon.logDebug('AuthorizedCallback token(s) validated, continue');\r\n    }\n/**\n * @return {?}\n */\nprivate refreshSession() {\r\n        this.oidcSecurityCommon.logDebug('BEGIN refresh session Authorize');\r\n\r\n        let /** @type {?} */ state = this.oidcSecurityCommon.authStateControl;\r\n        if (state === '' || state === null) {\r\n            state = Date.now() + '' + Math.random();\r\n            this.oidcSecurityCommon.authStateControl = state;\r\n        }\r\n\r\n        let /** @type {?} */ nonce = 'N' + Math.random() + '' + Date.now();\r\n        this.oidcSecurityCommon.authNonce = nonce;\r\n        this.oidcSecurityCommon.logDebug('RefreshSession created. adding myautostate: ' + this.oidcSecurityCommon.authStateControl);\r\n\r\n        let /** @type {?} */ url = this.createAuthorizeUrl(nonce, state, this.authWellKnownEndpoints.authorization_endpoint, 'none');\r\n\r\n        this.oidcSecurityCommon.silentRenewRunning = 'running';\r\n        this.oidcSecuritySilentRenew.startRenew(url);\r\n    }\n/**\n * @param {?} access_token\n * @param {?} id_token\n * @return {?}\n */\nprivate setAuthorizationData(access_token: any, id_token: any) {\r\n        if (this.oidcSecurityCommon.accessToken !== '') {\r\n            this.oidcSecurityCommon.accessToken = '';\r\n        }\r\n\r\n        this.oidcSecurityCommon.logDebug(access_token);\r\n        this.oidcSecurityCommon.logDebug(id_token);\r\n        this.oidcSecurityCommon.logDebug('storing to storage, getting the roles');\r\n        this.oidcSecurityCommon.accessToken = access_token;\r\n        this.oidcSecurityCommon.idToken = id_token;\r\n        this.setIsAuthorized(true);\r\n        this.oidcSecurityCommon.isAuthorized = true;\r\n    }\n/**\n * @param {?} nonce\n * @param {?} state\n * @param {?} authorization_endpoint\n * @param {?=} prompt\n * @return {?}\n */\nprivate createAuthorizeUrl(nonce: string, state: string, authorization_endpoint: string, prompt?: string): string {\r\n\r\n        let /** @type {?} */ urlParts = authorization_endpoint.split('?');\r\n        let /** @type {?} */ authorizationUrl = urlParts[0];\r\n        let /** @type {?} */ params = new HttpParams({ fromString: urlParts[1], encoder: new UriEncoder() });\r\n        params = params.set('client_id', this.authConfiguration.client_id);\r\n        params = params.append('redirect_uri', this.authConfiguration.redirect_url);\r\n        params = params.append('response_type', this.authConfiguration.response_type);\r\n        params = params.append('scope', this.authConfiguration.scope);\r\n        params = params.append('nonce', nonce);\r\n        params = params.append('state', state);\r\n        if (prompt) {\r\n            params = params.append('prompt', prompt);\r\n        }\r\n        if (this.authConfiguration.hd_param) {\r\n            params = params.append('hd', this.authConfiguration.hd_param);\r\n        }\r\n\r\n        let /** @type {?} */ customParams = Object.assign({}, this.oidcSecurityCommon.customRequestParams);\r\n\r\n        Object.keys(customParams).forEach(key => {\r\n            params = params.append(key, customParams[key].toString());\r\n        });\r\n\r\n        return `${authorizationUrl}?${params}`;\r\n    }\n/**\n * @param {?} end_session_endpoint\n * @param {?} id_token_hint\n * @return {?}\n */\nprivate createEndSessionUrl(end_session_endpoint: string, id_token_hint: string) {\r\n        let /** @type {?} */ urlParts = end_session_endpoint.split('?');\r\n\r\n        let /** @type {?} */ authorizationEndsessionUrl = urlParts[0];\r\n\r\n        let /** @type {?} */ params = new HttpParams({ fromString: urlParts[1], encoder: new UriEncoder() });\r\n        params = params.set('id_token_hint', id_token_hint);\r\n        params = params.append('post_logout_redirect_uri', this.authConfiguration.post_logout_redirect_uri);\r\n\r\n        return `${authorizationEndsessionUrl}?${params}`;\r\n    }\n/**\n * @param {?} isRenewProcess\n * @return {?}\n */\nprivate resetAuthorizationData(isRenewProcess: boolean) {\r\n        if (!isRenewProcess) {\r\n            if (this.authConfiguration.auto_userinfo) {\r\n                // Clear user data. Fixes #97.\r\n                this.setUserData('');\r\n            }\r\n            this.setIsAuthorized(false);\r\n            this.oidcSecurityCommon.resetStorageData(isRenewProcess);\r\n            this.checkSessionChanged = false;\r\n        }\r\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nhandleError(error: any) {\r\n        this.oidcSecurityCommon.logError(error);\r\n        if (error.status == 403) {\r\n            if (this.authConfiguration.trigger_authorization_result_event) {\r\n                this.onAuthorizationResult.emit(AuthorizationResult.unauthorized);\r\n            } else {\r\n                this.router.navigate([this.authConfiguration.forbidden_route]);\r\n            }\r\n        } else if (error.status == 401) {\r\n            let /** @type {?} */ silentRenew = this.oidcSecurityCommon.silentRenewRunning;\r\n            this.resetAuthorizationData(silentRenew !== '');\r\n            if (this.authConfiguration.trigger_authorization_result_event) {\r\n                this.onAuthorizationResult.emit(AuthorizationResult.unauthorized);\r\n            } else {\r\n                this.router.navigate([this.authConfiguration.unauthorized_route]);\r\n            }\r\n        }\r\n    }\n/**\n * @return {?}\n */\nprivate onCheckSessionChanged() {\r\n        this.oidcSecurityCommon.logDebug('onCheckSessionChanged');\r\n        this.checkSessionChanged = true;\r\n    }\n/**\n * @return {?}\n */\nprivate onWellKnownEndpointsLoaded() {\r\n        this.oidcSecurityCommon.logDebug('onWellKnownEndpointsLoaded');\r\n        this.authWellKnownEndpointsLoaded = true;\r\n    }\n/**\n * @return {?}\n */\nprivate onUserDataChanged() {\r\n        this.oidcSecurityCommon.logDebug(`onUserDataChanged: last = ${this.lastUserData}, new = ${this._userData.value}`);\r\n\r\n        if (this.lastUserData && !this._userData.value) {\r\n            this.oidcSecurityCommon.logDebug('onUserDataChanged: Logout detected.');\r\n            // TODO should we have an action here\r\n        }\r\n        this.lastUserData = this._userData.value;\r\n    }\n/**\n * @return {?}\n */\nprivate getSigningKeys(): Observable<JwtKeys> {\r\n        this.oidcSecurityCommon.logDebug('jwks_uri: ' + this.authWellKnownEndpoints.jwks_uri);\r\n        return this.http.get<JwtKeys>(this.authWellKnownEndpoints.jwks_uri)\r\n            .catch(this.handleErrorGetSigningKeys);\r\n    }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate handleErrorGetSigningKeys(error: Response | any) {\r\n        let /** @type {?} */ errMsg: string;\r\n        if (error instanceof Response) {\r\n            const /** @type {?} */ body = error.json() || {};\r\n            const /** @type {?} */ err = JSON.stringify(body);\r\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n        } else {\r\n            errMsg = error.message ? error.message : error.toString();\r\n        }\r\n        console.error(errMsg);\r\n        return Observable.throw(errMsg);\r\n    }\n/**\n * @return {?}\n */\nprivate runTokenValidation() {\r\n        if (this.runTokenValidationRunning) {\r\n            return;\r\n        }\r\n        this.runTokenValidationRunning = true;\r\n        let /** @type {?} */ source = Observable.timer(5000, 3000)\r\n            .timeInterval()\r\n            .pluck('interval')\r\n            .take(10000);\r\n\r\n        source.subscribe(() => {\r\n            if (this._userData.value) {\r\n                if (this.oidcSecurityValidation.isTokenExpired(this.oidcSecurityCommon.idToken, this.authConfiguration.silent_renew_offset_in_seconds)) {\r\n                    this.oidcSecurityCommon.logDebug('IsAuthorized: id_token isTokenExpired, start silent renew if active');\r\n\r\n                    if (this.authConfiguration.silent_renew) {\r\n                        this.refreshSession();\r\n                    } else {\r\n                        this.resetAuthorizationData(false);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n            (err: any) => {\r\n                this.oidcSecurityCommon.logError('Error: ' + err);\r\n            },\r\n            () => {\r\n                this.oidcSecurityCommon.logDebug('Completed');\r\n            });\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n{type: HttpClient, },\n{type: AuthConfiguration, },\n{type: Router, },\n{type: OidcSecurityCheckSession, },\n{type: OidcSecuritySilentRenew, },\n{type: OidcSecurityUserService, },\n{type: OidcSecurityCommon, },\n{type: AuthWellKnownEndpoints, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onModuleSetup': [{ type: Output },],\n'onAuthorizationResult': [{ type: Output },],\n};\n}\n\nfunction OidcSecurityService_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityService.ctorParameters;\n/** @type {?} */\nOidcSecurityService.propDecorators;\n/** @type {?} */\nOidcSecurityService.prototype.onModuleSetup;\n/** @type {?} */\nOidcSecurityService.prototype.onAuthorizationResult;\n/** @type {?} */\nOidcSecurityService.prototype.checkSessionChanged;\n/** @type {?} */\nOidcSecurityService.prototype.moduleSetup;\n/** @type {?} */\nOidcSecurityService.prototype._isAuthorized;\n/** @type {?} */\nOidcSecurityService.prototype._isAuthorizedValue;\n/** @type {?} */\nOidcSecurityService.prototype.lastUserData;\n/** @type {?} */\nOidcSecurityService.prototype._userData;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityValidation;\n/** @type {?} */\nOidcSecurityService.prototype.jwtKeys;\n/** @type {?} */\nOidcSecurityService.prototype.authWellKnownEndpointsLoaded;\n/** @type {?} */\nOidcSecurityService.prototype.runTokenValidationRunning;\n/** @type {?} */\nOidcSecurityService.prototype.platformId;\n/** @type {?} */\nOidcSecurityService.prototype.http;\n/** @type {?} */\nOidcSecurityService.prototype.authConfiguration;\n/** @type {?} */\nOidcSecurityService.prototype.router;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityCheckSession;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecuritySilentRenew;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityUserService;\n/** @type {?} */\nOidcSecurityService.prototype.oidcSecurityCommon;\n/** @type {?} */\nOidcSecurityService.prototype.authWellKnownEndpoints;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { HttpParameterCodec } from '@angular/common/http';\nexport class UriEncoder implements HttpParameterCodec {\n/**\n * @param {?} key\n * @return {?}\n */\nencodeKey(key: string): string {\n        return encodeURIComponent(key);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nencodeValue(value: string): string {\n        return encodeURIComponent(value);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\ndecodeKey(key: string): string {\n        return decodeURIComponent(key);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\ndecodeValue(value: string): string {\n        return decodeURIComponent(value);\n    }\n\n}\n","\nexport type AuthorizationResult = number;\nexport let AuthorizationResult: any = {};\nAuthorizationResult.authorized = 1;\nAuthorizationResult.forbidden = 2;\nAuthorizationResult.unauthorized = 3;\nAuthorizationResult[AuthorizationResult.authorized] = \"authorized\";\nAuthorizationResult[AuthorizationResult.forbidden] = \"forbidden\";\nAuthorizationResult[AuthorizationResult.unauthorized] = \"unauthorized\";\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport'rxjs/add/operator/map';\r\nimport'rxjs/add/operator/catch';\r\nimport'rxjs/add/observable/throw';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { AuthWellKnownEndpoints } from './auth.well-known-endpoints';\nexport class OidcSecurityUserService {\r\n\r\n    userData: any = '';\n/**\n * @param {?} http\n * @param {?} oidcSecurityCommon\n * @param {?} authWellKnownEndpoints\n */\nconstructor(\nprivate http: HttpClient,\nprivate oidcSecurityCommon: OidcSecurityCommon,\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints\r\n    ) {\r\n    }\n/**\n * @return {?}\n */\ninitUserData() {\r\n        return this.getIdentityUserData()\r\n            .map(data => this.userData = data);\r\n    }\nprivate getIdentityUserData = (): Observable<any> => {\r\n\r\n        let /** @type {?} */ headers = new HttpHeaders();\r\n        headers = headers.set('Accept', 'application/json');\r\n\r\n        let /** @type {?} */ token = this.oidcSecurityCommon.getAccessToken();\r\n\r\n        if (token !== '') {\r\n            headers = headers.set('Authorization', 'Bearer ' + decodeURIComponent(token));\r\n        }\r\n\r\n        return this.http.get(this.authWellKnownEndpoints.userinfo_endpoint, {\r\n            headers: headers,\r\n        });\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpClient, },\n{type: OidcSecurityCommon, },\n{type: AuthWellKnownEndpoints, },\n];\n}\n\nfunction OidcSecurityUserService_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityUserService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityUserService.ctorParameters;\n/** @type {?} */\nOidcSecurityUserService.prototype.userData;\n/** @type {?} */\nOidcSecurityUserService.prototype.getIdentityUserData;\n/** @type {?} */\nOidcSecurityUserService.prototype.http;\n/** @type {?} */\nOidcSecurityUserService.prototype.oidcSecurityCommon;\n/** @type {?} */\nOidcSecurityUserService.prototype.authWellKnownEndpoints;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport { Observable } from 'rxjs/Observable';\nexport class OidcSecuritySilentRenew {\nprivate sessionIframe: any;\n/**\n * @param {?} oidcSecurityCommon\n */\nconstructor(private oidcSecurityCommon: OidcSecurityCommon) {\r\n    }\n/**\n * @return {?}\n */\ninitRenew() {\r\n        let /** @type {?} */ existsparent = undefined;\r\n        try {\r\n          let /** @type {?} */ parentdoc = window.parent.document;\r\n          if (!parentdoc) {\r\n              throw new Error('Unaccessible');\r\n          }\r\n\r\n          existsparent =  parentdoc.getElementById('myiFrameForSilentRenew');\r\n        } catch ( /** @type {?} */e) {\r\n            // not accessible\r\n        }\r\n        let /** @type {?} */ exists = window.document.getElementById('myiFrameForSilentRenew');\r\n        if (existsparent) {\r\n            this.sessionIframe = existsparent;\r\n        } else if (exists) {\r\n            this.sessionIframe = exists;\r\n        }\r\n\r\n        if (!exists && !existsparent) {\r\n            this.sessionIframe = window.document.createElement('iframe');\r\n            this.sessionIframe.id = 'myiFrameForSilentRenew';\r\n            this.oidcSecurityCommon.logDebug(this.sessionIframe);\r\n            this.sessionIframe.style.display = 'none';\r\n\r\n            window.document.body.appendChild(this.sessionIframe);\r\n        }\r\n    }\n/**\n * @param {?} url\n * @return {?}\n */\nstartRenew(url: string) {\r\n        let /** @type {?} */ existsparent = undefined;\r\n        try {\r\n          let /** @type {?} */ parentdoc = window.parent.document;\r\n          if (!parentdoc) {\r\n              throw new Error('Unaccessible');\r\n          }\r\n\r\n          existsparent =  parentdoc.getElementById('myiFrameForSilentRenew');\r\n        } catch ( /** @type {?} */e) {\r\n            // not accessible\r\n        }\r\n        let /** @type {?} */ exists = window.document.getElementById('myiFrameForSilentRenew');\r\n        if (existsparent) {\r\n            this.sessionIframe = existsparent;\r\n        } else if (exists) {\r\n            this.sessionIframe = exists;\r\n        }\r\n\r\n        this.oidcSecurityCommon.logDebug('startRenew for URL:' + url);\r\n        this.sessionIframe.src = url;\r\n\r\n        return Observable.create((observer: Observer<any>) => {\r\n            this.sessionIframe.onload = () => {\r\n                observer.next(this);\r\n                observer.complete();\r\n            }\r\n        });\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OidcSecurityCommon, },\n];\n}\n\nfunction OidcSecuritySilentRenew_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecuritySilentRenew.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecuritySilentRenew.ctorParameters;\n/** @type {?} */\nOidcSecuritySilentRenew.prototype.sessionIframe;\n/** @type {?} */\nOidcSecuritySilentRenew.prototype.oidcSecurityCommon;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, EventEmitter, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Observer } from 'rxjs/Observer';\r\nimport'rxjs/add/operator/map';\r\nimport'rxjs/add/operator/catch';\r\nimport'rxjs/add/operator/timeInterval';\r\nimport'rxjs/add/operator/pluck';\r\nimport'rxjs/add/operator/take';\r\nimport'rxjs/add/observable/throw';\r\nimport'rxjs/add/observable/interval';\r\nimport'rxjs/add/observable/timer';\r\nimport'rxjs/add/observable/empty';\r\nimport { AuthConfiguration } from '../modules/auth.configuration';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\nimport { AuthWellKnownEndpoints } from './auth.well-known-endpoints';\nexport class OidcSecurityCheckSession {\nprivate sessionIframe: any;\nprivate iframeMessageEvent: any;\r\n\r\n     onCheckSessionChanged: EventEmitter<any> = new EventEmitter<any>(true);\n/**\n * @param {?} authConfiguration\n * @param {?} oidcSecurityCommon\n * @param {?} authWellKnownEndpoints\n */\nconstructor(\nprivate authConfiguration: AuthConfiguration,\nprivate oidcSecurityCommon: OidcSecurityCommon,\nprivate authWellKnownEndpoints: AuthWellKnownEndpoints\r\n    ) {\r\n    }\n/**\n * @return {?}\n */\ninit() {\r\n        let /** @type {?} */ exists = window.parent.document.getElementById('myiFrameForCheckSession');\r\n        if (!exists) {\r\n            this.sessionIframe = window.document.createElement('iframe');\r\n\r\n            this.sessionIframe.id = 'myiFrameForCheckSession';\r\n            this.oidcSecurityCommon.logDebug(this.sessionIframe);\r\n            this.sessionIframe.style.display = 'none';\r\n            this.sessionIframe.src = this.authWellKnownEndpoints.check_session_iframe;\r\n\r\n            window.document.body.appendChild(this.sessionIframe);\r\n            this.iframeMessageEvent = this.messageHandler.bind(this);\r\n            window.addEventListener('message', this.iframeMessageEvent, false);\r\n\r\n            return Observable.create((observer: Observer<any>) => {\r\n                this.sessionIframe.onload = () => {\r\n                    observer.next(this);\r\n                    observer.complete();\r\n                }\r\n            });\r\n        }\r\n\r\n        return Observable.empty<Response>();\r\n    }\n/**\n * @param {?} clientId\n * @return {?}\n */\npollServerSession(clientId: any) {\r\n        let /** @type {?} */ source = Observable.timer(3000, 3000)\r\n            .timeInterval()\r\n            .pluck('interval')\r\n            .take(10000);\r\n\r\n        source.subscribe(() => {\r\n                this.oidcSecurityCommon.logDebug(this.sessionIframe);\r\n                let /** @type {?} */ session_state = this.oidcSecurityCommon.sessionState;\r\n                if (session_state && session_state !== '') {\r\n                    this.sessionIframe.contentWindow.postMessage(clientId + ' ' + session_state, this.authConfiguration.stsServer);\r\n                }\r\n            },\r\n            (err: any) => {\r\n                this.oidcSecurityCommon.logError('pollServerSession error: ' + err);\r\n            },\r\n            () => {\r\n                this.oidcSecurityCommon.logDebug('checksession pollServerSession completed');\r\n            });\r\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate messageHandler(e: any) {\r\n        if (e.origin === this.authConfiguration.stsServer &&\r\n            e.source === this.sessionIframe.contentWindow\r\n        ) {\r\n            if (e.data === 'error') {\r\n                this.oidcSecurityCommon.logWarning('error from checksession messageHandler');\r\n            } else if (e.data === 'changed') {\r\n                this.onCheckSessionChanged.emit();\r\n            } else {\r\n                this.oidcSecurityCommon.logDebug(e.data + ' from checksession messageHandler');\r\n            }\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n{type: OidcSecurityCommon, },\n{type: AuthWellKnownEndpoints, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onCheckSessionChanged': [{ type: Output },],\n};\n}\n\nfunction OidcSecurityCheckSession_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityCheckSession.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityCheckSession.ctorParameters;\n/** @type {?} */\nOidcSecurityCheckSession.propDecorators;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.sessionIframe;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.iframeMessageEvent;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.onCheckSessionChanged;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.authConfiguration;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.oidcSecurityCommon;\n/** @type {?} */\nOidcSecurityCheckSession.prototype.authWellKnownEndpoints;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, EventEmitter, Output } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport'rxjs/add/operator/map';\r\nimport'rxjs/add/operator/catch';\r\nimport'rxjs/add/observable/throw';\r\nimport { AuthConfiguration } from '../modules/auth.configuration';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\nexport class AuthWellKnownEndpoints {\r\n\r\n     onWellKnownEndpointsLoaded: EventEmitter<any> = new EventEmitter<any>(true);\r\n\r\n    issuer: string;\r\n    jwks_uri: string;\r\n    authorization_endpoint: string;\r\n    token_endpoint: string;\r\n    userinfo_endpoint: string;\r\n    end_session_endpoint: string;\r\n    check_session_iframe: string;\r\n    revocation_endpoint: string;\r\n    introspection_endpoint: string;\n/**\n * @param {?} http\n * @param {?} authConfiguration\n * @param {?} oidcSecurityCommon\n */\nconstructor(\nprivate http: HttpClient,\nprivate authConfiguration: AuthConfiguration,\nprivate oidcSecurityCommon: OidcSecurityCommon\r\n    ) {\r\n    }\n/**\n * @return {?}\n */\nsetupModule() {\r\n        let /** @type {?} */ data = this.oidcSecurityCommon.wellKnownEndpoints;\r\n        this.oidcSecurityCommon.logDebug(data);\r\n        if (data && data !== '') {\r\n            this.oidcSecurityCommon.logDebug('AuthWellKnownEndpoints already defined');\r\n            this.issuer = data.issuer;\r\n            this.jwks_uri = data.jwks_uri;\r\n            this.authorization_endpoint = data.authorization_endpoint;\r\n            this.token_endpoint = data.token_endpoint;\r\n            this.userinfo_endpoint = data.userinfo_endpoint;\r\n\r\n            if (data.end_session_endpoint) {\r\n                this.end_session_endpoint = data.end_session_endpoint;\r\n\r\n            };\r\n\r\n            if (data.check_session_iframe) {\r\n                this.check_session_iframe = data.check_session_iframe;\r\n            };\r\n\r\n            if (data.revocation_endpoint) {\r\n                this.revocation_endpoint = data.revocation_endpoint;\r\n            };\r\n\r\n            if (data.introspection_endpoint) {\r\n                this.introspection_endpoint = data.introspection_endpoint;\r\n            }\r\n\r\n            this.onWellKnownEndpointsLoaded.emit();\r\n        } else {\r\n            this.oidcSecurityCommon.logDebug('AuthWellKnownEndpoints first time, get from the server');\r\n            this.getWellKnownEndpoints()\r\n                .subscribe((data: any) => {\r\n                    this.issuer = data.issuer;\r\n                    this.jwks_uri = data.jwks_uri;\r\n                    this.authorization_endpoint = data.authorization_endpoint;\r\n                    this.token_endpoint = data.token_endpoint;\r\n                    this.userinfo_endpoint = data.userinfo_endpoint;\r\n\r\n                    if (data.end_session_endpoint) {\r\n                        this.end_session_endpoint = data.end_session_endpoint;\r\n                    };\r\n\r\n                    if (data.check_session_iframe) {\r\n                        this.check_session_iframe = data.check_session_iframe;\r\n                    };\r\n\r\n                    if (data.revocation_endpoint) {\r\n                        this.revocation_endpoint = data.revocation_endpoint;\r\n                    };\r\n\r\n                    if (data.introspection_endpoint) {\r\n                        this.introspection_endpoint = data.introspection_endpoint;\r\n                    }\r\n\r\n                    this.oidcSecurityCommon.wellKnownEndpoints = data;\r\n                    this.oidcSecurityCommon.logDebug(data);\r\n\r\n                    this.onWellKnownEndpointsLoaded.emit();\r\n                });\r\n        }\r\n    }\nprivate getWellKnownEndpoints = (): Observable<any> => {\r\n\r\n        let /** @type {?} */ headers = new HttpHeaders();\r\n        headers = headers.set('Accept', 'application/json');\r\n\r\n        let /** @type {?} */ url = this.authConfiguration.stsServer + '/.well-known/openid-configuration';\r\n        if (this.authConfiguration.override_well_known_configuration) {\r\n            url = this.authConfiguration.override_well_known_configuration_url;\r\n        }\r\n\r\n        return this.http.get(url, {\r\n            headers: headers,\r\n        });\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpClient, },\n{type: AuthConfiguration, },\n{type: OidcSecurityCommon, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onWellKnownEndpointsLoaded': [{ type: Output },],\n};\n}\n\nfunction AuthWellKnownEndpoints_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthWellKnownEndpoints.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthWellKnownEndpoints.ctorParameters;\n/** @type {?} */\nAuthWellKnownEndpoints.propDecorators;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.onWellKnownEndpointsLoaded;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.issuer;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.jwks_uri;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.authorization_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.token_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.userinfo_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.end_session_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.check_session_iframe;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.revocation_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.introspection_endpoint;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.getWellKnownEndpoints;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.http;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.authConfiguration;\n/** @type {?} */\nAuthWellKnownEndpoints.prototype.oidcSecurityCommon;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { OidcSecurityCommon } from './oidc.security.common';\r\n\r\nimport { KJUR, KEYUTIL, hextob64u } from 'jsrsasign';\nexport class OidcSecurityValidation {\n/**\n * @param {?} oidcSecurityCommon\n */\nconstructor(private oidcSecurityCommon: OidcSecurityCommon) {\r\n    }\n/**\n * @param {?} token\n * @param {?=} offsetSeconds\n * @return {?}\n */\nisTokenExpired(token: string, offsetSeconds?: number): boolean {\r\n\r\n        let /** @type {?} */ decoded: any;\r\n        decoded = this.getPayloadFromToken(token, false);\r\n\r\n        return !(this.validate_id_token_exp_not_expired(decoded, offsetSeconds));\r\n    }\n/**\n * @param {?} decoded_id_token\n * @param {?=} offsetSeconds\n * @return {?}\n */\nvalidate_id_token_exp_not_expired(decoded_id_token: string, offsetSeconds?: number): boolean {\r\n        let /** @type {?} */ tokenExpirationDate = this.getTokenExpirationDate(decoded_id_token);\r\n        offsetSeconds = offsetSeconds || 0;\r\n\r\n        if (tokenExpirationDate == null) {\r\n            return false;\r\n        }\r\n\r\n        // Token not expired?\r\n        return (tokenExpirationDate.valueOf() > (new Date().valueOf() + (offsetSeconds * 1000)));\r\n    }\n/**\n * @param {?} dataIdToken\n * @return {?}\n */\nvalidate_required_id_token(dataIdToken: any): boolean {\r\n\r\n        let /** @type {?} */ validated = true;\r\n        if (!dataIdToken.hasOwnProperty('iss')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning('iss is missing, this is required in the id_token');\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('sub')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning('sub is missing, this is required in the id_token');\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('aud')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning('aud is missing, this is required in the id_token');\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('exp')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning('exp is missing, this is required in the id_token');\r\n        }\r\n\r\n        if (!dataIdToken.hasOwnProperty('iat')) {\r\n            validated = false;\r\n            this.oidcSecurityCommon.logWarning('iat is missing, this is required in the id_token');\r\n        }\r\n\r\n        return validated;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} max_offset_allowed_in_seconds\n * @return {?}\n */\nvalidate_id_token_iat_max_offset(dataIdToken: any, max_offset_allowed_in_seconds: number): boolean {\r\n        if (!dataIdToken.hasOwnProperty('iat')) {\r\n            return false;\r\n        }\r\n\r\n        let /** @type {?} */ dateTime_iat_id_token = new Date(0); // The 0 here is the key, which sets the date to the epoch\r\n        dateTime_iat_id_token.setUTCSeconds(dataIdToken.iat);\r\n\r\n        max_offset_allowed_in_seconds = max_offset_allowed_in_seconds || 0;\r\n\r\n        if (dateTime_iat_id_token == null) {\r\n            return false;\r\n        }\r\n\r\n        this.oidcSecurityCommon.logDebug('validate_id_token_iat_max_offset: ' + (new Date().valueOf() - dateTime_iat_id_token.valueOf()) + ' < ' + (max_offset_allowed_in_seconds * 1000));\r\n        return ((new Date().valueOf() - dateTime_iat_id_token.valueOf()) < (max_offset_allowed_in_seconds * 1000));\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} local_nonce\n * @return {?}\n */\nvalidate_id_token_nonce(dataIdToken: any, local_nonce: any): boolean {\r\n        if (dataIdToken.nonce !== local_nonce) {\r\n            this.oidcSecurityCommon.logDebug('Validate_id_token_nonce failed, dataIdToken.nonce: ' + dataIdToken.nonce + ' local_nonce:' + local_nonce);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} authWellKnownEndpoints_issuer\n * @return {?}\n */\nvalidate_id_token_iss(dataIdToken: any, authWellKnownEndpoints_issuer: any): boolean {\r\n        if (dataIdToken.iss != authWellKnownEndpoints_issuer) {\r\n            this.oidcSecurityCommon.logDebug('Validate_id_token_iss failed, dataIdToken.iss: ' + dataIdToken.iss + ' authWellKnownEndpoints issuer:' + authWellKnownEndpoints_issuer);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} dataIdToken\n * @param {?} aud\n * @return {?}\n */\nvalidate_id_token_aud(dataIdToken: any, aud: any): boolean {\r\n        if (dataIdToken.aud != aud) {\r\n            this.oidcSecurityCommon.logDebug('Validate_id_token_aud failed, dataIdToken.aud: ' + dataIdToken.aud + ' client_id:' + aud);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} state\n * @param {?} local_state\n * @return {?}\n */\nvalidateStateFromHashCallback(state: any, local_state: any): boolean {\r\n        if (state != local_state) {\r\n            this.oidcSecurityCommon.logDebug('ValidateStateFromHashCallback failed, state: ' + state + ' local_state:' + local_state);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} id_token_sub\n * @param {?} userdata_sub\n * @return {?}\n */\nvalidate_userdata_sub_id_token(id_token_sub: any, userdata_sub: any): boolean {\r\n        if (id_token_sub != userdata_sub) {\r\n            this.oidcSecurityCommon.logDebug('validate_userdata_sub_id_token failed, id_token_sub: ' + id_token_sub + ' userdata_sub:' + userdata_sub);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetPayloadFromToken(token: any, encode: boolean) {\r\n        let /** @type {?} */ data = {};\r\n        if (typeof token !== 'undefined') {\r\n            let /** @type {?} */ encoded = token.split('.')[1];\r\n            if (encode) {\r\n                return encoded;\r\n            }\r\n            data = JSON.parse(this.urlBase64Decode(encoded));\r\n        }\r\n\r\n        return data;\r\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetHeaderFromToken(token: any, encode: boolean) {\r\n        let /** @type {?} */ data = {};\r\n        if (typeof token !== 'undefined') {\r\n            let /** @type {?} */ encoded = token.split('.')[0];\r\n            if (encode) {\r\n                return encoded;\r\n            }\r\n            data = JSON.parse(this.urlBase64Decode(encoded));\r\n        }\r\n\r\n        return data;\r\n    }\n/**\n * @param {?} token\n * @param {?} encode\n * @return {?}\n */\ngetSignatureFromToken(token: any, encode: boolean) {\r\n        let /** @type {?} */ data = {};\r\n        if (typeof token !== 'undefined') {\r\n            let /** @type {?} */ encoded = token.split('.')[2];\r\n            if (encode) {\r\n                return encoded;\r\n            }\r\n            data = JSON.parse(this.urlBase64Decode(encoded));\r\n        }\r\n\r\n        return data;\r\n    }\n/**\n * @param {?} id_token\n * @param {?} jwtkeys\n * @return {?}\n */\nvalidate_signature_id_token(id_token: any, jwtkeys: any): boolean {\r\n\r\n        if (!jwtkeys || !jwtkeys.keys) {\r\n            return false;\r\n        }\r\n\r\n        let /** @type {?} */ header_data = this.getHeaderFromToken(id_token, false);\r\n\r\n\t\tif ((Object.keys(header_data).length === 0 && header_data.constructor === Object)) {\r\n\t\t\tthis.oidcSecurityCommon.logWarning('id token has no header data');\r\n            return false;\r\n\t\t}\r\n\r\n        let /** @type {?} */ kid = header_data.kid;\r\n        let /** @type {?} */ alg = header_data.alg;\r\n\r\n        if ('RS256' != alg) {\r\n            this.oidcSecurityCommon.logWarning('Only RS256 supported');\r\n            return false;\r\n        }\r\n\r\n        let /** @type {?} */ isValid = false;\r\n\r\n        if (!header_data.hasOwnProperty('kid')) {\r\n            // exactly 1 key in the jwtkeys and no kid in the Jose header\r\n            // kty\t\"RSA\" use \"sig\"\r\n            let /** @type {?} */ amountOfMatchingKeys = 0;\r\n            for (let /** @type {?} */ key of jwtkeys.keys) {\r\n                if (key.kty == 'RSA' && key.use == 'sig') {\r\n                    amountOfMatchingKeys = amountOfMatchingKeys + 1;\r\n                }\r\n            }\r\n\r\n            if (amountOfMatchingKeys == 0) {\r\n                this.oidcSecurityCommon.logWarning('no keys found, incorrect Signature, validation failed for id_token');\r\n                return false;\r\n            } else if (amountOfMatchingKeys > 1 ) {\r\n                this.oidcSecurityCommon.logWarning('no ID Token kid claim in JOSE header and multiple supplied in jwks_uri');\r\n                return false;\r\n            } else {\r\n                for (let /** @type {?} */ key of jwtkeys.keys) {\r\n                    if (key.kty == 'RSA' && key.use == 'sig') {\r\n                        let /** @type {?} */ publickey = KEYUTIL.getKey(key);\r\n                        isValid = KJUR.jws.JWS.verify(id_token, publickey, ['RS256']);\r\n                        if (!isValid) {\r\n                            this.oidcSecurityCommon.logWarning('incorrect Signature, validation failed for id_token');\r\n                        }\r\n                        return isValid;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            // kid in the Jose header of id_token\r\n            for (let /** @type {?} */ key of jwtkeys.keys) {\r\n                if (key.kid == kid) {\r\n                    let /** @type {?} */ publickey = KEYUTIL.getKey(key);\r\n                    isValid = KJUR.jws.JWS.verify(id_token, publickey, ['RS256']);\r\n                    if (!isValid) {\r\n                        this.oidcSecurityCommon.logWarning('incorrect Signature, validation failed for id_token');\r\n                    }\r\n                    return isValid;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\n/**\n * @param {?} response_type\n * @return {?}\n */\nconfig_validate_response_type(response_type: string): boolean {\r\n        if (response_type === 'id_token token' || response_type === 'id_token') {\r\n            return true;\r\n        }\r\n\r\n        this.oidcSecurityCommon.logWarning('module configure incorrect, invalid response_type:' + response_type);\r\n        return false;\r\n    }\n/**\n * @param {?} access_token\n * @param {?} at_hash\n * @return {?}\n */\nvalidate_id_token_at_hash(access_token: any, at_hash: any): boolean {\r\n        this.oidcSecurityCommon.logDebug('From the server:' + at_hash);\r\n        let /** @type {?} */ testdata =  this.generate_at_hash('' + access_token);\r\n        this.oidcSecurityCommon.logDebug('client validation not decoded:' + testdata);\r\n        if (testdata == at_hash) {\r\n            return true; // isValid;\r\n        } else {\r\n            let /** @type {?} */ testValue = this.generate_at_hash('' + decodeURIComponent(access_token));\r\n            this.oidcSecurityCommon.logDebug('-gen access--' + testValue);\r\n           if (testValue == at_hash) {\r\n                return true; // isValid\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\n/**\n * @param {?} access_token\n * @return {?}\n */\nprivate generate_at_hash(access_token: any): string {\r\n      let /** @type {?} */ hash = KJUR.crypto.Util.hashString(access_token, 'sha256');\r\n        let /** @type {?} */ first128bits = hash.substr(0, hash.length / 2);\r\n        let /** @type {?} */ testdata = hextob64u(first128bits);\r\n\r\n      return testdata;\r\n    }\n/**\n * @param {?} dataIdToken\n * @return {?}\n */\nprivate getTokenExpirationDate(dataIdToken: any): Date {\r\n        if (!dataIdToken.hasOwnProperty('exp')) {\r\n            return new Date();\r\n        }\r\n\r\n        let /** @type {?} */ date = new Date(0); // The 0 here is the key, which sets the date to the epoch\r\n        date.setUTCSeconds(dataIdToken.exp);\r\n\r\n        return date;\r\n    }\n/**\n * @param {?} str\n * @return {?}\n */\nprivate urlBase64Decode(str: string) {\r\n        let /** @type {?} */ output = str.replace('-', '+').replace('_', '/');\r\n        switch (output.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                output += '==';\r\n                break;\r\n            case 3:\r\n                output += '=';\r\n                break;\r\n            default:\r\n                throw 'Illegal base64url string!';\r\n        }\r\n\r\n        return window.atob(output);\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: OidcSecurityCommon, },\n];\n}\n\nfunction OidcSecurityValidation_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityValidation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityValidation.ctorParameters;\n/** @type {?} */\nOidcSecurityValidation.prototype.oidcSecurityCommon;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\r\nimport { AuthConfiguration } from '../modules/auth.configuration';\r\nimport { OidcSecurityStorage } from './oidc.security.storage';\r\n\r\nexport type SilentRenewState = 'running' | '';\nexport class OidcSecurityCommon {\nprivate storage_auth_result = 'authorizationResult';\n/**\n * @return {?}\n */\npublic get authResult(): any {\r\n        return this.retrieve(this.storage_auth_result);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authResult(value: any) {\r\n        this.store(this.storage_auth_result, value);\r\n    }\nprivate storage_access_token = 'authorizationData';\n/**\n * @return {?}\n */\npublic get accessToken(): string {\r\n        return this.retrieve(this.storage_access_token) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set accessToken(value: string) {\r\n        this.store(this.storage_access_token, value);\r\n    }\nprivate storage_id_token = 'authorizationDataIdToken';\n/**\n * @return {?}\n */\npublic get idToken(): string {\r\n        return this.retrieve(this.storage_id_token) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set idToken(value: string) {\r\n        this.store(this.storage_id_token, value);\r\n    }\nprivate storage_is_authorized = '_isAuthorized';\n/**\n * @return {?}\n */\npublic get isAuthorized(): boolean | undefined {\r\n        return this.retrieve(this.storage_is_authorized);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set isAuthorized(value: boolean | undefined) {\r\n        this.store(this.storage_is_authorized, value);\r\n    }\nprivate storage_user_data = 'userData';\n/**\n * @return {?}\n */\npublic get userData(): any {\r\n        return this.retrieve(this.storage_user_data);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set userData(value: any) {\r\n        this.store(this.storage_user_data, value);\r\n    }\nprivate storage_auth_nonce = 'authNonce';\n/**\n * @return {?}\n */\npublic get authNonce(): string {\r\n        return this.retrieve(this.storage_auth_nonce) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authNonce(value: string) {\r\n        this.store(this.storage_auth_nonce, value);\r\n    }\nprivate storage_auth_state_control = 'authStateControl';\n/**\n * @return {?}\n */\npublic get authStateControl(): string {\r\n        return this.retrieve(this.storage_auth_state_control) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set authStateControl(value: string) {\r\n        this.store(this.storage_auth_state_control, value);\r\n    }\nprivate storage_well_known_endpoints = 'wellknownendpoints';\n/**\n * @return {?}\n */\npublic get wellKnownEndpoints(): any {\r\n        return this.retrieve(this.storage_well_known_endpoints);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set wellKnownEndpoints(value: any) {\r\n        this.store(this.storage_well_known_endpoints, value);\r\n    }\nprivate storage_session_state = 'session_state';\n/**\n * @return {?}\n */\npublic get sessionState(): any {\r\n        return this.retrieve(this.storage_session_state);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set sessionState(value: any) {\r\n        this.store(this.storage_session_state, value);\r\n    }\nprivate storage_silent_renew_running = 'storage_silent_renew_running';\n/**\n * @return {?}\n */\npublic get silentRenewRunning(): SilentRenewState {\r\n        return this.retrieve(this.storage_silent_renew_running) || '';\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set silentRenewRunning(value: SilentRenewState) {\r\n        this.store(this.storage_silent_renew_running, value);\r\n    }\nprivate storage_custom_request_params = 'storage_custom_request_params';\n/**\n * @return {?}\n */\npublic get customRequestParams(): { [key: string]: string | number | boolean } {\r\n        return this.retrieve(this.storage_custom_request_params);\r\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set customRequestParams(value: { [key: string]: string | number | boolean }) {\r\n        this.store(this.storage_custom_request_params, value);\r\n    }\n/**\n * @param {?} authConfiguration\n * @param {?} oidcSecurityStorage\n */\nconstructor(private authConfiguration: AuthConfiguration,\nprivate oidcSecurityStorage: OidcSecurityStorage) {\r\n    }\n/**\n * @return {?}\n */\nsetupModule() { }\n/**\n * @param {?} key\n * @return {?}\n */\nprivate retrieve(key: string): any {\r\n        return this.oidcSecurityStorage.read(key);\r\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nprivate store(key: string, value: any) {\r\n        this.oidcSecurityStorage.write(key, value);\r\n    }\n/**\n * @param {?} isRenewProcess\n * @return {?}\n */\nresetStorageData(isRenewProcess: boolean) {\r\n        if (!isRenewProcess) {\r\n            this.store(this.storage_auth_result, '');\r\n            this.store(this.storage_session_state, '');\r\n            this.store(this.storage_silent_renew_running, '');\r\n            this.store(this.storage_is_authorized, false);\r\n            this.store(this.storage_access_token, '');\r\n            this.store(this.storage_id_token, '');\r\n            this.store(this.storage_user_data, '');\r\n        }\r\n    }\n/**\n * @return {?}\n */\ngetAccessToken(): any {\r\n        return this.retrieve(this.storage_access_token);\r\n    }\n/**\n * @return {?}\n */\ngetIdToken(): any {\r\n        return this.retrieve(this.storage_id_token);\r\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nlogError(message: any) {\r\n        console.error(message);\r\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nlogWarning(message: any) {\r\n        if (this.authConfiguration.log_console_warning_active) {\r\n            console.warn(message);\r\n        }\r\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nlogDebug(message: any) {\r\n        if (this.authConfiguration.log_console_debug_active) {\r\n            console.log(message);\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n{type: OidcSecurityStorage, },\n];\n}\n\nfunction OidcSecurityCommon_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityCommon.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityCommon.ctorParameters;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_result;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_access_token;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_id_token;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_is_authorized;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_user_data;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_nonce;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_auth_state_control;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_well_known_endpoints;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_session_state;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_silent_renew_running;\n/** @type {?} */\nOidcSecurityCommon.prototype.storage_custom_request_params;\n/** @type {?} */\nOidcSecurityCommon.prototype.authConfiguration;\n/** @type {?} */\nOidcSecurityCommon.prototype.oidcSecurityStorage;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { AuthConfiguration } from '../modules/auth.configuration';\n/**\n * Implement this class-interface to create a custom storage.\n * @abstract\n */\nexport abstract class OidcSecurityStorage {\n/**\n * This method must contain the logic to read the storage.\n * @abstract\n * @param {?} key\n * @return {?} The value of the given key\n */\nread(key: string) {}\n/**\n * This method must contain the logic to write the storage.\n * @abstract\n * @param {?} key\n * @param {?} value The value for the given key\n * @return {?}\n */\nwrite(key: string, value: any) {}\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction OidcSecurityStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nOidcSecurityStorage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOidcSecurityStorage.ctorParameters;\n}\n\nexport class BrowserStorage implements OidcSecurityStorage {\nprivate hasStorage: boolean;\n/**\n * @param {?} authConfiguration\n */\nconstructor(private authConfiguration: AuthConfiguration) {\n        this.hasStorage = typeof Storage !== 'undefined';\n    }\n/**\n * @param {?} key\n * @return {?}\n */\npublic read(key: string): any {\n        if (this.hasStorage) {\n            return JSON.parse(this.authConfiguration.storage.getItem(key));\n        }\n\n        return;\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\npublic write(key: string, value: any): void {\n        if (this.hasStorage) {\n            value = value === undefined ? null : value;\n            this.authConfiguration.storage.setItem(key, JSON.stringify(value));\n        }\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuthConfiguration, },\n];\n}\n\nfunction BrowserStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserStorage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserStorage.ctorParameters;\n/** @type {?} */\nBrowserStorage.prototype.hasStorage;\n/** @type {?} */\nBrowserStorage.prototype.authConfiguration;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class DefaultConfiguration {\r\n    stsServer = 'https://localhost:44318';\r\n    redirect_url = 'https://localhost:44311';\r\n    // The Client MUST validate that the aud (audience) Claim contains its client_id value registered at the Issuer identified by the iss (issuer) Claim as an audience.\r\n    // The ID Token MUST be rejected if the ID Token does not list the Client as a valid audience, or if it contains additional audiences not trusted by the Client.\r\n    client_id = 'angularclient';\r\n    response_type = 'id_token token';\r\n    // For some oidc, we require resource identifier to be provided along with the request.\r\n    resource = '';\r\n    scope = 'openid email profile';\r\n    // Only for Google Auth with particular G Suite domain, see https://developers.google.com/identity/protocols/OpenIDConnect#hd-param\r\n    hd_param = '';\r\n    post_logout_redirect_uri = 'https://localhost:44311/unauthorized';\r\n    start_checksession = false;\r\n    silent_renew = true;\r\n    silent_renew_offset_in_seconds = 0;\r\n    post_login_route = '/';\r\n    // HTTP 403\r\n    forbidden_route = '/forbidden';\r\n    // HTTP 401\r\n    unauthorized_route = '/unauthorized';\r\n    auto_userinfo = true;\r\n\tauto_clean_state_after_authentication: true;\r\n\ttrigger_authorization_result_event: false;\r\n    log_console_warning_active = true;\r\n    log_console_debug_active = false;\r\n\r\n\r\n    // id_token C8: The iat Claim can be used to reject tokens that were issued too far away from the current time,\r\n    // limiting the amount of time that nonces need to be stored to prevent attacks.The acceptable range is Client specific.\r\n    max_id_token_iat_offset_allowed_in_seconds = 3;\r\n    override_well_known_configuration = false;\r\n    override_well_known_configuration_url = 'https://localhost:44386/wellknownconfiguration.json';\r\n\r\n    storage = typeof Storage !== 'undefined' ? sessionStorage : null;\r\n}\n\nfunction DefaultConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultConfiguration.prototype.stsServer;\n/** @type {?} */\nDefaultConfiguration.prototype.redirect_url;\n/** @type {?} */\nDefaultConfiguration.prototype.client_id;\n/** @type {?} */\nDefaultConfiguration.prototype.response_type;\n/** @type {?} */\nDefaultConfiguration.prototype.resource;\n/** @type {?} */\nDefaultConfiguration.prototype.scope;\n/** @type {?} */\nDefaultConfiguration.prototype.hd_param;\n/** @type {?} */\nDefaultConfiguration.prototype.post_logout_redirect_uri;\n/** @type {?} */\nDefaultConfiguration.prototype.start_checksession;\n/** @type {?} */\nDefaultConfiguration.prototype.silent_renew;\n/** @type {?} */\nDefaultConfiguration.prototype.silent_renew_offset_in_seconds;\n/** @type {?} */\nDefaultConfiguration.prototype.post_login_route;\n/** @type {?} */\nDefaultConfiguration.prototype.forbidden_route;\n/** @type {?} */\nDefaultConfiguration.prototype.unauthorized_route;\n/** @type {?} */\nDefaultConfiguration.prototype.auto_userinfo;\n/** @type {?} */\nDefaultConfiguration.prototype.auto_clean_state_after_authentication;\n/** @type {?} */\nDefaultConfiguration.prototype.trigger_authorization_result_event;\n/** @type {?} */\nDefaultConfiguration.prototype.log_console_warning_active;\n/** @type {?} */\nDefaultConfiguration.prototype.log_console_debug_active;\n/** @type {?} */\nDefaultConfiguration.prototype.max_id_token_iat_offset_allowed_in_seconds;\n/** @type {?} */\nDefaultConfiguration.prototype.override_well_known_configuration;\n/** @type {?} */\nDefaultConfiguration.prototype.override_well_known_configuration_url;\n/** @type {?} */\nDefaultConfiguration.prototype.storage;\n}\n\nexport class OpenIDImplicitFlowConfiguration {\r\n\r\n    stsServer: string;\r\n    redirect_url: string;\r\n    client_id: string;\r\n    response_type: string;\r\n    resource: string;\r\n    scope: string;\r\n    hd_param: string;\r\n    post_logout_redirect_uri: string;\r\n    start_checksession: boolean;\r\n    silent_renew: boolean;\r\n    silent_renew_offset_in_seconds: number;\r\n    post_login_route: string;\r\n    forbidden_route: string;\r\n    unauthorized_route: string;\r\n    auto_userinfo: boolean;\r\n\tauto_clean_state_after_authentication: boolean;\r\n\ttrigger_authorization_result_event: boolean;\r\n    log_console_warning_active: boolean;\r\n    log_console_debug_active: boolean;\r\n    max_id_token_iat_offset_allowed_in_seconds: number;\r\n    override_well_known_configuration: boolean;\r\n    override_well_known_configuration_url: string;\r\n    storage: any;\r\n}\n\nfunction OpenIDImplicitFlowConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.stsServer;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.redirect_url;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.client_id;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.response_type;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.resource;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.scope;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.hd_param;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.post_logout_redirect_uri;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.start_checksession;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.silent_renew;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.silent_renew_offset_in_seconds;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.post_login_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.forbidden_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.unauthorized_route;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.auto_userinfo;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.auto_clean_state_after_authentication;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.trigger_authorization_result_event;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.log_console_warning_active;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.log_console_debug_active;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.max_id_token_iat_offset_allowed_in_seconds;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.override_well_known_configuration;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.override_well_known_configuration_url;\n/** @type {?} */\nOpenIDImplicitFlowConfiguration.prototype.storage;\n}\n\nexport class AuthConfiguration {\nprivate openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration;\n/**\n * @return {?}\n */\nget stsServer(): string {\r\n        return this.openIDImplicitFlowConfiguration.stsServer || this.defaultConfig.stsServer;\r\n    }\n/**\n * @return {?}\n */\nget redirect_url(): string {\r\n        return this.openIDImplicitFlowConfiguration.redirect_url || this.defaultConfig.redirect_url;\r\n    }\n/**\n * @return {?}\n */\nget client_id(): string {\r\n        return this.openIDImplicitFlowConfiguration.client_id || this.defaultConfig.client_id;\r\n    }\n/**\n * @return {?}\n */\nget response_type(): string {\r\n        return this.openIDImplicitFlowConfiguration.response_type || this.defaultConfig.response_type;\r\n    }\n/**\n * @return {?}\n */\nget resource(): string {\r\n        return this.openIDImplicitFlowConfiguration.resource || this.defaultConfig.resource;\r\n    }\n/**\n * @return {?}\n */\nget scope(): string {\r\n        return this.openIDImplicitFlowConfiguration.scope || this.defaultConfig.scope;\r\n    }\n/**\n * @return {?}\n */\nget hd_param(): string {\r\n      return this.openIDImplicitFlowConfiguration.hd_param || this.defaultConfig.hd_param;\r\n    }\n/**\n * @return {?}\n */\nget post_logout_redirect_uri(): string {\r\n        return this.openIDImplicitFlowConfiguration.post_logout_redirect_uri || this.defaultConfig.post_logout_redirect_uri;\r\n    }\n/**\n * @return {?}\n */\nget start_checksession(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.start_checksession !== undefined ? this.openIDImplicitFlowConfiguration.start_checksession : this.defaultConfig.start_checksession;\r\n    }\n/**\n * @return {?}\n */\nget silent_renew(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.silent_renew !== undefined ? this.openIDImplicitFlowConfiguration.silent_renew : this.defaultConfig.silent_renew;\r\n    }\n/**\n * @return {?}\n */\nget silent_renew_offset_in_seconds(): number {\r\n        return this.openIDImplicitFlowConfiguration.silent_renew_offset_in_seconds || this.defaultConfig.silent_renew_offset_in_seconds;\r\n    }\n/**\n * @return {?}\n */\nget post_login_route(): string {\r\n        return this.openIDImplicitFlowConfiguration.post_login_route || this.defaultConfig.post_login_route;\r\n    }\n/**\n * @return {?}\n */\nget forbidden_route(): string {\r\n        return this.openIDImplicitFlowConfiguration.forbidden_route || this.defaultConfig.forbidden_route;\r\n    }\n/**\n * @return {?}\n */\nget unauthorized_route(): string {\r\n        return this.openIDImplicitFlowConfiguration.unauthorized_route || this.defaultConfig.unauthorized_route;\r\n    }\n/**\n * @return {?}\n */\nget auto_userinfo(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.auto_userinfo !== undefined ? this.openIDImplicitFlowConfiguration.auto_userinfo : this.defaultConfig.auto_userinfo;\r\n    }\n/**\n * @return {?}\n */\nget auto_clean_state_after_authentication(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.auto_clean_state_after_authentication !== undefined ? this.openIDImplicitFlowConfiguration.auto_clean_state_after_authentication : this.defaultConfig.auto_clean_state_after_authentication;\r\n\t}\n/**\n * @return {?}\n */\nget trigger_authorization_result_event(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.trigger_authorization_result_event !== undefined ? this.openIDImplicitFlowConfiguration.trigger_authorization_result_event : this.defaultConfig.trigger_authorization_result_event;\r\n    }\n/**\n * @return {?}\n */\nget log_console_warning_active(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.log_console_warning_active !== undefined ? this.openIDImplicitFlowConfiguration.log_console_warning_active : this.defaultConfig.log_console_warning_active;\r\n    }\n/**\n * @return {?}\n */\nget log_console_debug_active(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.log_console_debug_active !== undefined ? this.openIDImplicitFlowConfiguration.log_console_debug_active : this.defaultConfig.log_console_debug_active;\r\n    }\n/**\n * @return {?}\n */\nget max_id_token_iat_offset_allowed_in_seconds(): number {\r\n        return this.openIDImplicitFlowConfiguration.max_id_token_iat_offset_allowed_in_seconds || this.defaultConfig.max_id_token_iat_offset_allowed_in_seconds;\r\n    }\n/**\n * @return {?}\n */\nget override_well_known_configuration(): boolean {\r\n        return this.openIDImplicitFlowConfiguration.override_well_known_configuration !== undefined ? this.openIDImplicitFlowConfiguration.override_well_known_configuration : this.defaultConfig.override_well_known_configuration;\r\n    }\n/**\n * @return {?}\n */\nget override_well_known_configuration_url(): string {\r\n        return this.openIDImplicitFlowConfiguration.override_well_known_configuration_url || this.defaultConfig.override_well_known_configuration_url;\r\n    }\n/**\n * @return {?}\n */\nget storage(): any {\r\n        return this.openIDImplicitFlowConfiguration.storage || this.defaultConfig.storage;\r\n    }\n/**\n * @param {?} defaultConfig\n */\nconstructor(private defaultConfig: DefaultConfiguration) { }\n/**\n * @param {?} openIDImplicitFlowConfiguration\n * @return {?}\n */\ninit(openIDImplicitFlowConfiguration: OpenIDImplicitFlowConfiguration) {\r\n        this.openIDImplicitFlowConfiguration = openIDImplicitFlowConfiguration;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DefaultConfiguration, },\n];\n}\n\nfunction AuthConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthConfiguration.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthConfiguration.ctorParameters;\n/** @type {?} */\nAuthConfiguration.prototype.openIDImplicitFlowConfiguration;\n/** @type {?} */\nAuthConfiguration.prototype.defaultConfig;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}